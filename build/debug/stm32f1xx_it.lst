ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****   *
  16:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****   */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f1xx_it.c **** 
  27:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f1xx_it.c **** 
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f1xx_it.c **** 
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f1xx_it.c **** 
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f1xx_it.c **** 
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f1xx_it.c **** 
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/stm32f1xx_it.c **** extern ADC_HandleTypeDef hadc1;
  60:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  61:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32f1xx_it.c **** 
  63:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f1xx_it.c **** /**
  69:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32f1xx_it.c ****   */
  71:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  73:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32f1xx_it.c **** 
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f1xx_it.c ****   HAL_RCC_NMI_IRQHandler();
  36              		.loc 1 76 3 view .LVU1
  37 0002 FFF7FEFF 		bl	HAL_RCC_NMI_IRQHandler
  38              	.LVL0:
  39              	.L2:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 3


  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f1xx_it.c ****    while (1)
  40              		.loc 1 78 4 view .LVU2
  79:Core/Src/stm32f1xx_it.c ****   {
  80:Core/Src/stm32f1xx_it.c ****   }
  41              		.loc 1 80 3 view .LVU3
  78:Core/Src/stm32f1xx_it.c ****   {
  42              		.loc 1 78 10 view .LVU4
  43 0006 FEE7     		b	.L2
  44              		.cfi_endproc
  45              	.LFE65:
  47              		.section	.text.HardFault_Handler,"ax",%progbits
  48              		.align	1
  49              		.global	HardFault_Handler
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	HardFault_Handler:
  55              	.LFB66:
  81:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f1xx_it.c **** }
  83:Core/Src/stm32f1xx_it.c **** 
  84:Core/Src/stm32f1xx_it.c **** /**
  85:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f1xx_it.c ****   */
  87:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f1xx_it.c **** {
  56              		.loc 1 88 1 view -0
  57              		.cfi_startproc
  58              		@ Volatile: function does not return.
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62              	.L5:
  89:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f1xx_it.c **** 
  91:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f1xx_it.c ****   while (1)
  63              		.loc 1 92 3 view .LVU6
  93:Core/Src/stm32f1xx_it.c ****   {
  94:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f1xx_it.c ****   }
  64              		.loc 1 96 3 view .LVU7
  92:Core/Src/stm32f1xx_it.c ****   {
  65              		.loc 1 92 9 view .LVU8
  66 0000 FEE7     		b	.L5
  67              		.cfi_endproc
  68              	.LFE66:
  70              		.section	.text.MemManage_Handler,"ax",%progbits
  71              		.align	1
  72              		.global	MemManage_Handler
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	MemManage_Handler:
  78              	.LFB67:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 4


  97:Core/Src/stm32f1xx_it.c **** }
  98:Core/Src/stm32f1xx_it.c **** 
  99:Core/Src/stm32f1xx_it.c **** /**
 100:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 101:Core/Src/stm32f1xx_it.c ****   */
 102:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 103:Core/Src/stm32f1xx_it.c **** {
  79              		.loc 1 103 1 view -0
  80              		.cfi_startproc
  81              		@ Volatile: function does not return.
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.L7:
 104:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f1xx_it.c **** 
 106:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f1xx_it.c ****   while (1)
  86              		.loc 1 107 3 view .LVU10
 108:Core/Src/stm32f1xx_it.c ****   {
 109:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f1xx_it.c ****   }
  87              		.loc 1 111 3 view .LVU11
 107:Core/Src/stm32f1xx_it.c ****   {
  88              		.loc 1 107 9 view .LVU12
  89 0000 FEE7     		b	.L7
  90              		.cfi_endproc
  91              	.LFE67:
  93              		.section	.text.BusFault_Handler,"ax",%progbits
  94              		.align	1
  95              		.global	BusFault_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	BusFault_Handler:
 101              	.LFB68:
 112:Core/Src/stm32f1xx_it.c **** }
 113:Core/Src/stm32f1xx_it.c **** 
 114:Core/Src/stm32f1xx_it.c **** /**
 115:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 116:Core/Src/stm32f1xx_it.c ****   */
 117:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 118:Core/Src/stm32f1xx_it.c **** {
 102              		.loc 1 118 1 view -0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.L9:
 119:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Core/Src/stm32f1xx_it.c **** 
 121:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Core/Src/stm32f1xx_it.c ****   while (1)
 109              		.loc 1 122 3 view .LVU14
 123:Core/Src/stm32f1xx_it.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 5


 124:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 125:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f1xx_it.c ****   }
 110              		.loc 1 126 3 view .LVU15
 122:Core/Src/stm32f1xx_it.c ****   {
 111              		.loc 1 122 9 view .LVU16
 112 0000 FEE7     		b	.L9
 113              		.cfi_endproc
 114              	.LFE68:
 116              		.section	.text.UsageFault_Handler,"ax",%progbits
 117              		.align	1
 118              		.global	UsageFault_Handler
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	UsageFault_Handler:
 124              	.LFB69:
 127:Core/Src/stm32f1xx_it.c **** }
 128:Core/Src/stm32f1xx_it.c **** 
 129:Core/Src/stm32f1xx_it.c **** /**
 130:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Core/Src/stm32f1xx_it.c ****   */
 132:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 133:Core/Src/stm32f1xx_it.c **** {
 125              		.loc 1 133 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L11:
 134:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Core/Src/stm32f1xx_it.c **** 
 136:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Core/Src/stm32f1xx_it.c ****   while (1)
 132              		.loc 1 137 3 view .LVU18
 138:Core/Src/stm32f1xx_it.c ****   {
 139:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f1xx_it.c ****   }
 133              		.loc 1 141 3 view .LVU19
 137:Core/Src/stm32f1xx_it.c ****   {
 134              		.loc 1 137 9 view .LVU20
 135 0000 FEE7     		b	.L11
 136              		.cfi_endproc
 137              	.LFE69:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	SVC_Handler:
 147              	.LFB70:
 142:Core/Src/stm32f1xx_it.c **** }
 143:Core/Src/stm32f1xx_it.c **** 
 144:Core/Src/stm32f1xx_it.c **** /**
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 6


 145:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 146:Core/Src/stm32f1xx_it.c ****   */
 147:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 148:Core/Src/stm32f1xx_it.c **** {
 148              		.loc 1 148 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 149:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 150:Core/Src/stm32f1xx_it.c **** 
 151:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 153:Core/Src/stm32f1xx_it.c **** 
 154:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 155:Core/Src/stm32f1xx_it.c **** }
 153              		.loc 1 155 1 view .LVU22
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE70:
 158              		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	DebugMon_Handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	DebugMon_Handler:
 166              	.LFB71:
 156:Core/Src/stm32f1xx_it.c **** 
 157:Core/Src/stm32f1xx_it.c **** /**
 158:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 159:Core/Src/stm32f1xx_it.c ****   */
 160:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 161:Core/Src/stm32f1xx_it.c **** {
 167              		.loc 1 161 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 162:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 163:Core/Src/stm32f1xx_it.c **** 
 164:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 166:Core/Src/stm32f1xx_it.c **** 
 167:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f1xx_it.c **** }
 172              		.loc 1 168 1 view .LVU24
 173 0000 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE71:
 177              		.section	.text.PendSV_Handler,"ax",%progbits
 178              		.align	1
 179              		.global	PendSV_Handler
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	PendSV_Handler:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 7


 185              	.LFB72:
 169:Core/Src/stm32f1xx_it.c **** 
 170:Core/Src/stm32f1xx_it.c **** /**
 171:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 172:Core/Src/stm32f1xx_it.c ****   */
 173:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 174:Core/Src/stm32f1xx_it.c **** {
 186              		.loc 1 174 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 175:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 176:Core/Src/stm32f1xx_it.c **** 
 177:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 178:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 179:Core/Src/stm32f1xx_it.c **** 
 180:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 181:Core/Src/stm32f1xx_it.c **** }
 191              		.loc 1 181 1 view .LVU26
 192 0000 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE72:
 196              		.section	.text.SysTick_Handler,"ax",%progbits
 197              		.align	1
 198              		.global	SysTick_Handler
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	SysTick_Handler:
 204              	.LFB73:
 182:Core/Src/stm32f1xx_it.c **** 
 183:Core/Src/stm32f1xx_it.c **** /**
 184:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 185:Core/Src/stm32f1xx_it.c ****   */
 186:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 187:Core/Src/stm32f1xx_it.c **** {
 205              		.loc 1 187 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 189:Core/Src/stm32f1xx_it.c **** 
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 191:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 213              		.loc 1 191 3 view .LVU28
 214 0002 FFF7FEFF 		bl	HAL_IncTick
 215              	.LVL1:
 192:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 193:Core/Src/stm32f1xx_it.c **** 
 194:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 195:Core/Src/stm32f1xx_it.c **** }
 216              		.loc 1 195 1 is_stmt 0 view .LVU29
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 8


 217 0006 08BD     		pop	{r3, pc}
 218              		.cfi_endproc
 219              	.LFE73:
 221              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 222              		.align	1
 223              		.global	DMA1_Channel1_IRQHandler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	DMA1_Channel1_IRQHandler:
 229              	.LFB74:
 196:Core/Src/stm32f1xx_it.c **** 
 197:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 198:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 199:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 200:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 201:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 202:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 203:Core/Src/stm32f1xx_it.c **** 
 204:Core/Src/stm32f1xx_it.c **** /**
 205:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 206:Core/Src/stm32f1xx_it.c ****   */
 207:Core/Src/stm32f1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 208:Core/Src/stm32f1xx_it.c **** {
 230              		.loc 1 208 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 209:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 210:Core/Src/stm32f1xx_it.c **** 
 211:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 212:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 238              		.loc 1 212 3 view .LVU31
 239 0002 0248     		ldr	r0, .L19
 240 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 241              	.LVL2:
 213:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 214:Core/Src/stm32f1xx_it.c **** 
 215:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 216:Core/Src/stm32f1xx_it.c **** }
 242              		.loc 1 216 1 is_stmt 0 view .LVU32
 243 0008 08BD     		pop	{r3, pc}
 244              	.L20:
 245 000a 00BF     		.align	2
 246              	.L19:
 247 000c 00000000 		.word	hdma_adc1
 248              		.cfi_endproc
 249              	.LFE74:
 251              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 252              		.align	1
 253              		.global	ADC1_2_IRQHandler
 254              		.syntax unified
 255              		.thumb
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 9


 256              		.thumb_func
 258              	ADC1_2_IRQHandler:
 259              	.LFB75:
 217:Core/Src/stm32f1xx_it.c **** 
 218:Core/Src/stm32f1xx_it.c **** /**
 219:Core/Src/stm32f1xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 220:Core/Src/stm32f1xx_it.c ****   */
 221:Core/Src/stm32f1xx_it.c **** void ADC1_2_IRQHandler(void)
 222:Core/Src/stm32f1xx_it.c **** {
 260              		.loc 1 222 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
 223:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 224:Core/Src/stm32f1xx_it.c **** 
 225:Core/Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 226:Core/Src/stm32f1xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 268              		.loc 1 226 3 view .LVU34
 269 0002 0248     		ldr	r0, .L23
 270 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 271              	.LVL3:
 227:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 228:Core/Src/stm32f1xx_it.c **** 
 229:Core/Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 230:Core/Src/stm32f1xx_it.c **** }
 272              		.loc 1 230 1 is_stmt 0 view .LVU35
 273 0008 08BD     		pop	{r3, pc}
 274              	.L24:
 275 000a 00BF     		.align	2
 276              	.L23:
 277 000c 00000000 		.word	hadc1
 278              		.cfi_endproc
 279              	.LFE75:
 281              		.section	.text.TIM1_BRK_IRQHandler,"ax",%progbits
 282              		.align	1
 283              		.global	TIM1_BRK_IRQHandler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	TIM1_BRK_IRQHandler:
 289              	.LFB76:
 231:Core/Src/stm32f1xx_it.c **** 
 232:Core/Src/stm32f1xx_it.c **** /**
 233:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 break interrupt.
 234:Core/Src/stm32f1xx_it.c ****   */
 235:Core/Src/stm32f1xx_it.c **** void TIM1_BRK_IRQHandler(void)
 236:Core/Src/stm32f1xx_it.c **** {
 290              		.loc 1 236 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 08B5     		push	{r3, lr}
 295              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 10


 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 237:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_IRQn 0 */
 238:Core/Src/stm32f1xx_it.c **** 
 239:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_BRK_IRQn 0 */
 240:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 298              		.loc 1 240 3 view .LVU37
 299 0002 0248     		ldr	r0, .L27
 300 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 301              	.LVL4:
 241:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_IRQn 1 */
 242:Core/Src/stm32f1xx_it.c **** 
 243:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_BRK_IRQn 1 */
 244:Core/Src/stm32f1xx_it.c **** }
 302              		.loc 1 244 1 is_stmt 0 view .LVU38
 303 0008 08BD     		pop	{r3, pc}
 304              	.L28:
 305 000a 00BF     		.align	2
 306              	.L27:
 307 000c 00000000 		.word	htim1
 308              		.cfi_endproc
 309              	.LFE76:
 311              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 312              		.align	1
 313              		.global	TIM1_UP_IRQHandler
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	TIM1_UP_IRQHandler:
 319              	.LFB77:
 245:Core/Src/stm32f1xx_it.c **** 
 246:Core/Src/stm32f1xx_it.c **** /**
 247:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 248:Core/Src/stm32f1xx_it.c ****   */
 249:Core/Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 250:Core/Src/stm32f1xx_it.c **** {
 320              		.loc 1 250 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 251:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 252:Core/Src/stm32f1xx_it.c **** 
 253:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 254:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 328              		.loc 1 254 3 view .LVU40
 329 0002 0248     		ldr	r0, .L31
 330 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 331              	.LVL5:
 255:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 256:Core/Src/stm32f1xx_it.c **** 
 257:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 258:Core/Src/stm32f1xx_it.c **** }
 332              		.loc 1 258 1 is_stmt 0 view .LVU41
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 11


 333 0008 08BD     		pop	{r3, pc}
 334              	.L32:
 335 000a 00BF     		.align	2
 336              	.L31:
 337 000c 00000000 		.word	htim1
 338              		.cfi_endproc
 339              	.LFE77:
 341              		.section	.text.TIM1_TRG_COM_IRQHandler,"ax",%progbits
 342              		.align	1
 343              		.global	TIM1_TRG_COM_IRQHandler
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	TIM1_TRG_COM_IRQHandler:
 349              	.LFB78:
 259:Core/Src/stm32f1xx_it.c **** 
 260:Core/Src/stm32f1xx_it.c **** /**
 261:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts.
 262:Core/Src/stm32f1xx_it.c ****   */
 263:Core/Src/stm32f1xx_it.c **** void TIM1_TRG_COM_IRQHandler(void)
 264:Core/Src/stm32f1xx_it.c **** {
 350              		.loc 1 264 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 08B5     		push	{r3, lr}
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 265:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_IRQn 0 */
 266:Core/Src/stm32f1xx_it.c **** 
 267:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_TRG_COM_IRQn 0 */
 268:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 358              		.loc 1 268 3 view .LVU43
 359 0002 0248     		ldr	r0, .L35
 360 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 361              	.LVL6:
 269:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_IRQn 1 */
 270:Core/Src/stm32f1xx_it.c **** 
 271:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_TRG_COM_IRQn 1 */
 272:Core/Src/stm32f1xx_it.c **** }
 362              		.loc 1 272 1 is_stmt 0 view .LVU44
 363 0008 08BD     		pop	{r3, pc}
 364              	.L36:
 365 000a 00BF     		.align	2
 366              	.L35:
 367 000c 00000000 		.word	htim1
 368              		.cfi_endproc
 369              	.LFE78:
 371              		.text
 372              	.Letext0:
 373              		.file 2 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 374              		.file 3 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
 375              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 376              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 377              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 378              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 12


 379              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 380              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 381              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 382              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:19     .text.NMI_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:48     .text.HardFault_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:54     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:71     .text.MemManage_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:77     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:94     .text.BusFault_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:100    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:117    .text.UsageFault_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:123    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:140    .text.SVC_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:146    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:159    .text.DebugMon_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:165    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:178    .text.PendSV_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:184    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:197    .text.SysTick_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:203    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:222    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:228    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:247    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:252    .text.ADC1_2_IRQHandler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:258    .text.ADC1_2_IRQHandler:00000000 ADC1_2_IRQHandler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:277    .text.ADC1_2_IRQHandler:0000000c $d
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:282    .text.TIM1_BRK_IRQHandler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:288    .text.TIM1_BRK_IRQHandler:00000000 TIM1_BRK_IRQHandler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:307    .text.TIM1_BRK_IRQHandler:0000000c $d
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:312    .text.TIM1_UP_IRQHandler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:318    .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:337    .text.TIM1_UP_IRQHandler:0000000c $d
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:342    .text.TIM1_TRG_COM_IRQHandler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:348    .text.TIM1_TRG_COM_IRQHandler:00000000 TIM1_TRG_COM_IRQHandler
C:\Users\kroko\AppData\Local\Temp\ccmD83zR.s:367    .text.TIM1_TRG_COM_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_RCC_NMI_IRQHandler
HAL_IncTick
HAL_DMA_IRQHandler
hdma_adc1
HAL_ADC_IRQHandler
hadc1
HAL_TIM_IRQHandler
htim1
