ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB75:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "stdbool.h"
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "stdlib.h"
  27:Core/Src/main.c **** #include "math.h"
  28:Core/Src/main.c **** #include "six_step.h"
  29:Core/Src/main.c **** #include "buttons.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** #define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** #define SHUTDOWN_DUTY 115
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** uint16_t duty;
  61:Core/Src/main.c **** uint16_t duty_dt;
  62:Core/Src/main.c **** uint8_t hall_value; // newer version of bool halls[3]
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** uint32_t pulse_interval_us = 0xFFFFFFFF;
  65:Core/Src/main.c **** uint32_t pulse_interval_data;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** uint32_t gase_zero_pos = 1200;
  68:Core/Src/main.c **** uint32_t gase_max_pos = 3050;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** bool startup_sequence = true;// set true 
  71:Core/Src/main.c **** bool stop_sequence = false;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** bool stop_sequence_ctrl = false;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** uint16_t adc_value;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** #define MAX_DUTY_DELTA     8   // maximum change per 10ms
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** uint16_t target_duty = 0;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** float current = 0.0f;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** bool isScreenConnected = false;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** bool isMotorEnabled = false;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** Button start_stop_btt = {Start_Stop_BTT_GPIO_Port, Start_Stop_BTT_Pin, TYPE_HIGH_PULL};
  88:Core/Src/main.c **** /* USER CODE END PV */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 3


  91:Core/Src/main.c **** void SystemClock_Config(void);
  92:Core/Src/main.c **** static void MX_GPIO_Init(void);
  93:Core/Src/main.c **** static void MX_DMA_Init(void);
  94:Core/Src/main.c **** static void MX_ADC1_Init(void);
  95:Core/Src/main.c **** static void MX_TIM1_Init(void);
  96:Core/Src/main.c **** static void MX_IWDG_Init(void);
  97:Core/Src/main.c **** static void MX_RTC_Init(void);
  98:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PFP */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 103:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END 0 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****   * @brief  The application entry point.
 109:Core/Src/main.c ****   * @retval int
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c **** int main(void)
 112:Core/Src/main.c **** {
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END 1 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 121:Core/Src/main.c ****   HAL_Init();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END Init */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Configure the system clock */
 128:Core/Src/main.c ****   SystemClock_Config();
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE END SysInit */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* Initialize all configured peripherals */
 135:Core/Src/main.c ****   MX_GPIO_Init();
 136:Core/Src/main.c ****   MX_DMA_Init();
 137:Core/Src/main.c ****   MX_ADC1_Init();
 138:Core/Src/main.c ****   MX_TIM1_Init();
 139:Core/Src/main.c ****   MX_IWDG_Init();
 140:Core/Src/main.c ****   MX_RTC_Init();
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 142:Core/Src/main.c ****   HAL_ADC_Stop(&hadc1);
 143:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_value, 1);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   uint16_t motorEnBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR1);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 4


 148:Core/Src/main.c ****   uint16_t targetDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR2);
 149:Core/Src/main.c ****   uint16_t realDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR3);
 150:Core/Src/main.c ****   uint16_t code = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR4);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if(code == 0xAA55){
 153:Core/Src/main.c ****     isMotorEnabled = motorEnBackupValue;
 154:Core/Src/main.c ****     target_duty = targetDutyBackupValue;
 155:Core/Src/main.c ****     duty = realDutyBackupValue;
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   init(&start_stop_btt);
 159:Core/Src/main.c ****   HAL_GPIO_WritePin(Start_Stop_LED_GPIO_Port, Start_Stop_LED_Pin, isMotorEnabled);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   MC_DisablePWM();
 162:Core/Src/main.c ****   MC_InitPWM();
 163:Core/Src/main.c ****   MC_SetDuty(0);
 164:Core/Src/main.c ****   MC_LoadStep(1);
 165:Core/Src/main.c ****   MC_EnablePWM();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   MX_IWDG_Init();
 168:Core/Src/main.c ****   /* USER CODE END 2 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* Infinite loop */
 171:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 172:Core/Src/main.c ****   while (1)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     if (HAL_IWDG_Refresh(&hiwdg) != HAL_OK){
 175:Core/Src/main.c **** 		  Error_Handler();
 176:Core/Src/main.c **** 	  }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     if(isClicked(&start_stop_btt)){
 179:Core/Src/main.c ****       isMotorEnabled = !isMotorEnabled;
 180:Core/Src/main.c ****       HAL_GPIO_WritePin(Start_Stop_LED_GPIO_Port, Start_Stop_LED_Pin, isMotorEnabled);
 181:Core/Src/main.c ****     }
 182:Core/Src/main.c ****     tick(&start_stop_btt);
 183:Core/Src/main.c ****     /* USER CODE END WHILE */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   /* USER CODE END 3 */
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief System Clock Configuration
 192:Core/Src/main.c ****   * @retval None
 193:Core/Src/main.c ****   */
 194:Core/Src/main.c **** void SystemClock_Config(void)
 195:Core/Src/main.c **** {
 196:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 197:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 198:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 201:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 5


 205:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 207:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 211:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 219:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 220:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 221:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_ADC;
 230:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 231:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 232:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Enables the Clock Security System
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   HAL_RCC_EnableCSS();
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 244:Core/Src/main.c ****   * @param None
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** static void MX_ADC1_Init(void)
 248:Core/Src/main.c **** {
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /** Common config
 261:Core/Src/main.c ****   */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 6


 262:Core/Src/main.c ****   hadc1.Instance = ADC1;
 263:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 264:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 265:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 266:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 267:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 268:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 269:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /** Configure Regular Channel
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 277:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 278:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****   * @brief IWDG Initialization Function
 291:Core/Src/main.c ****   * @param None
 292:Core/Src/main.c ****   * @retval None
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c **** static void MX_IWDG_Init(void)
 295:Core/Src/main.c **** {
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 304:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 305:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 306:Core/Src/main.c ****   hiwdg.Init.Reload = 80;
 307:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** }
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /**
 318:Core/Src/main.c ****   * @brief RTC Initialization Function
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 7


 319:Core/Src/main.c ****   * @param None
 320:Core/Src/main.c ****   * @retval None
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c **** static void MX_RTC_Init(void)
 323:Core/Src/main.c **** {
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /** Initialize RTC Only
 334:Core/Src/main.c ****   */
 335:Core/Src/main.c ****   hrtc.Instance = RTC;
 336:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 337:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 338:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 339:Core/Src/main.c ****   {
 340:Core/Src/main.c ****     Error_Handler();
 341:Core/Src/main.c ****   }
 342:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /**
 349:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 350:Core/Src/main.c ****   * @param None
 351:Core/Src/main.c ****   * @retval None
 352:Core/Src/main.c ****   */
 353:Core/Src/main.c **** static void MX_TIM1_Init(void)
 354:Core/Src/main.c **** {
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 361:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 362:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 363:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 368:Core/Src/main.c ****   htim1.Instance = TIM1;
 369:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 370:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 371:Core/Src/main.c ****   htim1.Init.Period = 2399;
 372:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 373:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 374:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 375:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 8


 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 380:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 381:Core/Src/main.c ****   {
 382:Core/Src/main.c ****     Error_Handler();
 383:Core/Src/main.c ****   }
 384:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 385:Core/Src/main.c ****   {
 386:Core/Src/main.c ****     Error_Handler();
 387:Core/Src/main.c ****   }
 388:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 389:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 390:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****     Error_Handler();
 393:Core/Src/main.c ****   }
 394:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 395:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 396:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 397:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 398:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 399:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 400:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 401:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 402:Core/Src/main.c ****   {
 403:Core/Src/main.c ****     Error_Handler();
 404:Core/Src/main.c ****   }
 405:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 410:Core/Src/main.c ****   {
 411:Core/Src/main.c ****     Error_Handler();
 412:Core/Src/main.c ****   }
 413:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 414:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 415:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 416:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 417:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 418:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 419:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 420:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 421:Core/Src/main.c ****   {
 422:Core/Src/main.c ****     Error_Handler();
 423:Core/Src/main.c ****   }
 424:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 427:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** }
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** /**
 432:Core/Src/main.c ****   * Enable DMA controller clock
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 9


 433:Core/Src/main.c ****   */
 434:Core/Src/main.c **** static void MX_DMA_Init(void)
 435:Core/Src/main.c **** {
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* DMA controller clock enable */
 438:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* DMA interrupt init */
 441:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 442:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 443:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** }
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c ****   * @brief GPIO Initialization Function
 449:Core/Src/main.c ****   * @param None
 450:Core/Src/main.c ****   * @retval None
 451:Core/Src/main.c ****   */
 452:Core/Src/main.c **** static void MX_GPIO_Init(void)
 453:Core/Src/main.c **** {
  26              		.loc 1 453 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              		.cfi_def_cfa_offset 28
  32              		.cfi_offset 4, -28
  33              		.cfi_offset 5, -24
  34              		.cfi_offset 6, -20
  35              		.cfi_offset 7, -16
  36              		.cfi_offset 8, -12
  37              		.cfi_offset 9, -8
  38              		.cfi_offset 14, -4
  39 0004 89B0     		sub	sp, sp, #36
  40              		.cfi_def_cfa_offset 64
 454:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 454 3 view .LVU1
  42              		.loc 1 454 20 is_stmt 0 view .LVU2
  43 0006 04AD     		add	r5, sp, #16
  44 0008 0024     		movs	r4, #0
  45 000a 0494     		str	r4, [sp, #16]
  46 000c 0594     		str	r4, [sp, #20]
  47 000e 0694     		str	r4, [sp, #24]
  48 0010 0794     		str	r4, [sp, #28]
 455:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 460:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 460 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 460 3 view .LVU4
  52              		.loc 1 460 3 view .LVU5
  53 0012 2C4B     		ldr	r3, .L3
  54 0014 9A69     		ldr	r2, [r3, #24]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 10


  55 0016 42F01002 		orr	r2, r2, #16
  56 001a 9A61     		str	r2, [r3, #24]
  57              		.loc 1 460 3 view .LVU6
  58 001c 9A69     		ldr	r2, [r3, #24]
  59 001e 02F01002 		and	r2, r2, #16
  60 0022 0092     		str	r2, [sp]
  61              		.loc 1 460 3 view .LVU7
  62 0024 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 460 3 view .LVU8
 461:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 461 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 461 3 view .LVU10
  68              		.loc 1 461 3 view .LVU11
  69 0026 9A69     		ldr	r2, [r3, #24]
  70 0028 42F02002 		orr	r2, r2, #32
  71 002c 9A61     		str	r2, [r3, #24]
  72              		.loc 1 461 3 view .LVU12
  73 002e 9A69     		ldr	r2, [r3, #24]
  74 0030 02F02002 		and	r2, r2, #32
  75 0034 0192     		str	r2, [sp, #4]
  76              		.loc 1 461 3 view .LVU13
  77 0036 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 461 3 view .LVU14
 462:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 462 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 462 3 view .LVU16
  83              		.loc 1 462 3 view .LVU17
  84 0038 9A69     		ldr	r2, [r3, #24]
  85 003a 42F00402 		orr	r2, r2, #4
  86 003e 9A61     		str	r2, [r3, #24]
  87              		.loc 1 462 3 view .LVU18
  88 0040 9A69     		ldr	r2, [r3, #24]
  89 0042 02F00402 		and	r2, r2, #4
  90 0046 0292     		str	r2, [sp, #8]
  91              		.loc 1 462 3 view .LVU19
  92 0048 029A     		ldr	r2, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 462 3 view .LVU20
 463:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  95              		.loc 1 463 3 view .LVU21
  96              	.LBB7:
  97              		.loc 1 463 3 view .LVU22
  98              		.loc 1 463 3 view .LVU23
  99 004a 9A69     		ldr	r2, [r3, #24]
 100 004c 42F00802 		orr	r2, r2, #8
 101 0050 9A61     		str	r2, [r3, #24]
 102              		.loc 1 463 3 view .LVU24
 103 0052 9B69     		ldr	r3, [r3, #24]
 104 0054 03F00803 		and	r3, r3, #8
 105 0058 0393     		str	r3, [sp, #12]
 106              		.loc 1 463 3 view .LVU25
 107 005a 039B     		ldr	r3, [sp, #12]
 108              	.LBE7:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 11


 109              		.loc 1 463 3 view .LVU26
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 466:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin|PH1L_Pin|PH2L_Pin|PH3L_Pin, GPIO_PIN_RESET);
 110              		.loc 1 466 3 view .LVU27
 111 005c DFF86890 		ldr	r9, .L3+4
 112 0060 2246     		mov	r2, r4
 113 0062 4FF40E51 		mov	r1, #9088
 114 0066 4846     		mov	r0, r9
 115 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 116              	.LVL0:
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 469:Core/Src/main.c ****   HAL_GPIO_WritePin(Start_Stop_LED_GPIO_Port, Start_Stop_LED_Pin, GPIO_PIN_RESET);
 117              		.loc 1 469 3 view .LVU28
 118 006c 174E     		ldr	r6, .L3+8
 119 006e 2246     		mov	r2, r4
 120 0070 4FF40061 		mov	r1, #2048
 121 0074 3046     		mov	r0, r6
 122 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL1:
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin PH1L_Pin PH2L_Pin PH3L_Pin */
 472:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin|PH1L_Pin|PH2L_Pin|PH3L_Pin;
 124              		.loc 1 472 3 view .LVU29
 125              		.loc 1 472 23 is_stmt 0 view .LVU30
 126 007a 4FF40E53 		mov	r3, #9088
 127 007e 0493     		str	r3, [sp, #16]
 473:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 128              		.loc 1 473 3 is_stmt 1 view .LVU31
 129              		.loc 1 473 24 is_stmt 0 view .LVU32
 130 0080 0127     		movs	r7, #1
 131 0082 0597     		str	r7, [sp, #20]
 474:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 132              		.loc 1 474 3 is_stmt 1 view .LVU33
 133              		.loc 1 474 24 is_stmt 0 view .LVU34
 134 0084 0694     		str	r4, [sp, #24]
 475:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 135              		.loc 1 475 3 is_stmt 1 view .LVU35
 136              		.loc 1 475 25 is_stmt 0 view .LVU36
 137 0086 4FF00208 		mov	r8, #2
 138 008a CDF81C80 		str	r8, [sp, #28]
 476:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 139              		.loc 1 476 3 is_stmt 1 view .LVU37
 140 008e 2946     		mov	r1, r5
 141 0090 4846     		mov	r0, r9
 142 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL2:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   /*Configure GPIO pins : Start_Stop_BTT_Pin H1_Pin H2_Pin H3_Pin */
 479:Core/Src/main.c ****   GPIO_InitStruct.Pin = Start_Stop_BTT_Pin|H1_Pin|H2_Pin|H3_Pin;
 144              		.loc 1 479 3 view .LVU38
 145              		.loc 1 479 23 is_stmt 0 view .LVU39
 146 0096 4FF46443 		mov	r3, #58368
 147 009a 0493     		str	r3, [sp, #16]
 480:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 148              		.loc 1 480 3 is_stmt 1 view .LVU40
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 12


 149              		.loc 1 480 24 is_stmt 0 view .LVU41
 150 009c 0594     		str	r4, [sp, #20]
 481:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 151              		.loc 1 481 3 is_stmt 1 view .LVU42
 152              		.loc 1 481 24 is_stmt 0 view .LVU43
 153 009e 0697     		str	r7, [sp, #24]
 482:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 154              		.loc 1 482 3 is_stmt 1 view .LVU44
 155 00a0 2946     		mov	r1, r5
 156 00a2 3046     		mov	r0, r6
 157 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 158              	.LVL3:
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /*Configure GPIO pin : Start_Stop_LED_Pin */
 485:Core/Src/main.c ****   GPIO_InitStruct.Pin = Start_Stop_LED_Pin;
 159              		.loc 1 485 3 view .LVU45
 160              		.loc 1 485 23 is_stmt 0 view .LVU46
 161 00a8 4FF40063 		mov	r3, #2048
 162 00ac 0493     		str	r3, [sp, #16]
 486:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 163              		.loc 1 486 3 is_stmt 1 view .LVU47
 164              		.loc 1 486 24 is_stmt 0 view .LVU48
 165 00ae 0597     		str	r7, [sp, #20]
 487:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 487 3 is_stmt 1 view .LVU49
 167              		.loc 1 487 24 is_stmt 0 view .LVU50
 168 00b0 0694     		str	r4, [sp, #24]
 488:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 169              		.loc 1 488 3 is_stmt 1 view .LVU51
 170              		.loc 1 488 25 is_stmt 0 view .LVU52
 171 00b2 CDF81C80 		str	r8, [sp, #28]
 489:Core/Src/main.c ****   HAL_GPIO_Init(Start_Stop_LED_GPIO_Port, &GPIO_InitStruct);
 172              		.loc 1 489 3 is_stmt 1 view .LVU53
 173 00b6 2946     		mov	r1, r5
 174 00b8 3046     		mov	r0, r6
 175 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 176              	.LVL4:
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 494:Core/Src/main.c **** }
 177              		.loc 1 494 1 is_stmt 0 view .LVU54
 178 00be 09B0     		add	sp, sp, #36
 179              		.cfi_def_cfa_offset 28
 180              		@ sp needed
 181 00c0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 182              	.L4:
 183              		.align	2
 184              	.L3:
 185 00c4 00100240 		.word	1073876992
 186 00c8 00100140 		.word	1073811456
 187 00cc 000C0140 		.word	1073810432
 188              		.cfi_endproc
 189              	.LFE75:
 191              		.section	.text.MX_DMA_Init,"ax",%progbits
 192              		.align	1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 13


 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	MX_DMA_Init:
 198              	.LFB74:
 435:Core/Src/main.c **** 
 199              		.loc 1 435 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 00B5     		push	{lr}
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 14, -4
 206 0002 83B0     		sub	sp, sp, #12
 207              		.cfi_def_cfa_offset 16
 438:Core/Src/main.c **** 
 208              		.loc 1 438 3 view .LVU56
 209              	.LBB8:
 438:Core/Src/main.c **** 
 210              		.loc 1 438 3 view .LVU57
 438:Core/Src/main.c **** 
 211              		.loc 1 438 3 view .LVU58
 212 0004 0A4B     		ldr	r3, .L7
 213 0006 5A69     		ldr	r2, [r3, #20]
 214 0008 42F00102 		orr	r2, r2, #1
 215 000c 5A61     		str	r2, [r3, #20]
 438:Core/Src/main.c **** 
 216              		.loc 1 438 3 view .LVU59
 217 000e 5B69     		ldr	r3, [r3, #20]
 218 0010 03F00103 		and	r3, r3, #1
 219 0014 0193     		str	r3, [sp, #4]
 438:Core/Src/main.c **** 
 220              		.loc 1 438 3 view .LVU60
 221 0016 019B     		ldr	r3, [sp, #4]
 222              	.LBE8:
 438:Core/Src/main.c **** 
 223              		.loc 1 438 3 view .LVU61
 442:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 224              		.loc 1 442 3 view .LVU62
 225 0018 0022     		movs	r2, #0
 226 001a 1146     		mov	r1, r2
 227 001c 0B20     		movs	r0, #11
 228 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 229              	.LVL5:
 443:Core/Src/main.c **** 
 230              		.loc 1 443 3 view .LVU63
 231 0022 0B20     		movs	r0, #11
 232 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 233              	.LVL6:
 445:Core/Src/main.c **** 
 234              		.loc 1 445 1 is_stmt 0 view .LVU64
 235 0028 03B0     		add	sp, sp, #12
 236              		.cfi_def_cfa_offset 4
 237              		@ sp needed
 238 002a 5DF804FB 		ldr	pc, [sp], #4
 239              	.L8:
 240 002e 00BF     		.align	2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 14


 241              	.L7:
 242 0030 00100240 		.word	1073876992
 243              		.cfi_endproc
 244              	.LFE74:
 246              		.section	.text.map,"ax",%progbits
 247              		.align	1
 248              		.global	map
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	map:
 254              	.LVL7:
 255              	.LFB76:
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 497:Core/Src/main.c **** uint32_t map(uint32_t x, uint32_t in_min, uint32_t in_max, uint32_t out_min, uint32_t out_max) {
 256              		.loc 1 497 96 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 4, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 498:Core/Src/main.c ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 261              		.loc 1 498 3 view .LVU66
 262              		.loc 1 498 13 is_stmt 0 view .LVU67
 263 0000 A0EB010C 		sub	ip, r0, r1
 264              		.loc 1 498 34 view .LVU68
 265 0004 0098     		ldr	r0, [sp]
 266              	.LVL8:
 267              		.loc 1 498 34 view .LVU69
 268 0006 C01A     		subs	r0, r0, r3
 269              		.loc 1 498 23 view .LVU70
 270 0008 00FB0CFC 		mul	ip, r0, ip
 271              		.loc 1 498 55 view .LVU71
 272 000c 521A     		subs	r2, r2, r1
 273              	.LVL9:
 274              		.loc 1 498 45 view .LVU72
 275 000e BCFBF2FC 		udiv	ip, ip, r2
 499:Core/Src/main.c **** }
 276              		.loc 1 499 1 view .LVU73
 277 0012 0CEB0300 		add	r0, ip, r3
 278 0016 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE76:
 282              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 283              		.align	1
 284              		.global	HAL_TIM_PeriodElapsedCallback
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	HAL_TIM_PeriodElapsedCallback:
 290              	.LVL10:
 291              	.LFB77:
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 292              		.loc 1 501 60 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 15


 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		.loc 1 501 60 is_stmt 0 view .LVU75
 297 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 298              		.cfi_def_cfa_offset 24
 299              		.cfi_offset 4, -24
 300              		.cfi_offset 5, -20
 301              		.cfi_offset 6, -16
 302              		.cfi_offset 7, -12
 303              		.cfi_offset 8, -8
 304              		.cfi_offset 14, -4
 305 0004 82B0     		sub	sp, sp, #8
 306              		.cfi_def_cfa_offset 32
 502:Core/Src/main.c ****   // Get hall values
 503:Core/Src/main.c ****   uint8_t old_halls = hall_value;
 307              		.loc 1 503 3 is_stmt 1 view .LVU76
 308              		.loc 1 503 11 is_stmt 0 view .LVU77
 309 0006 4F4F     		ldr	r7, .L25
 310 0008 3D78     		ldrb	r5, [r7]	@ zero_extendqisi2
 311              	.LVL11:
 504:Core/Src/main.c ****   uint8_t hall_a = (HAL_GPIO_ReadPin(H1_GPIO_Port, H1_Pin) == GPIO_PIN_SET) ? 1 : 0;
 312              		.loc 1 504 3 is_stmt 1 view .LVU78
 313              		.loc 1 504 21 is_stmt 0 view .LVU79
 314 000a DFF83C81 		ldr	r8, .L25+4
 315 000e 4FF40051 		mov	r1, #8192
 316 0012 4046     		mov	r0, r8
 317              	.LVL12:
 318              		.loc 1 504 21 view .LVU80
 319 0014 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 320              	.LVL13:
 321              		.loc 1 504 81 discriminator 1 view .LVU81
 322 0018 0128     		cmp	r0, #1
 323 001a 14BF     		ite	ne
 324 001c 0026     		movne	r6, #0
 325 001e 0126     		moveq	r6, #1
 326              	.LVL14:
 505:Core/Src/main.c ****   uint8_t hall_b = (HAL_GPIO_ReadPin(H2_GPIO_Port, H2_Pin) == GPIO_PIN_SET) ? 1 : 0;
 327              		.loc 1 505 3 is_stmt 1 view .LVU82
 328              		.loc 1 505 21 is_stmt 0 view .LVU83
 329 0020 4FF48041 		mov	r1, #16384
 330 0024 4046     		mov	r0, r8
 331 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 332              	.LVL15:
 333              		.loc 1 505 81 discriminator 1 view .LVU84
 334 002a 0128     		cmp	r0, #1
 335 002c 14BF     		ite	ne
 336 002e 0024     		movne	r4, #0
 337 0030 0124     		moveq	r4, #1
 338              	.LVL16:
 506:Core/Src/main.c ****   uint8_t hall_c = (HAL_GPIO_ReadPin(H3_GPIO_Port, H3_Pin) == GPIO_PIN_SET) ? 1 : 0;
 339              		.loc 1 506 3 is_stmt 1 view .LVU85
 340              		.loc 1 506 21 is_stmt 0 view .LVU86
 341 0032 4FF40041 		mov	r1, #32768
 342 0036 4046     		mov	r0, r8
 343 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 344              	.LVL17:
 345              		.loc 1 506 81 discriminator 1 view .LVU87
 346 003c 0128     		cmp	r0, #1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 16


 347 003e 14BF     		ite	ne
 348 0040 0023     		movne	r3, #0
 349 0042 0123     		moveq	r3, #1
 350              	.LVL18:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   hall_value = (hall_c << 2) | (hall_b << 1) | hall_a;
 351              		.loc 1 508 3 is_stmt 1 view .LVU88
 352              		.loc 1 508 30 is_stmt 0 view .LVU89
 353 0044 6000     		lsls	r0, r4, #1
 354 0046 40EA8300 		orr	r0, r0, r3, lsl #2
 355              		.loc 1 508 46 view .LVU90
 356 004a 3043     		orrs	r0, r0, r6
 357              		.loc 1 508 14 view .LVU91
 358 004c 3870     		strb	r0, [r7]
 509:Core/Src/main.c ****  
 510:Core/Src/main.c ****   // Get gase value and update current
 511:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_value, 1);
 359              		.loc 1 511 3 is_stmt 1 view .LVU92
 360 004e 3F4C     		ldr	r4, .L25+8
 361              	.LVL19:
 362              		.loc 1 511 3 is_stmt 0 view .LVU93
 363 0050 0122     		movs	r2, #1
 364 0052 2146     		mov	r1, r4
 365 0054 3E48     		ldr	r0, .L25+12
 366 0056 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 367              	.LVL20:
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   uint16_t gase_value = constrain(adc_value, gase_zero_pos, gase_max_pos);
 368              		.loc 1 513 3 is_stmt 1 view .LVU94
 369              		.loc 1 513 25 is_stmt 0 view .LVU95
 370 005a 2088     		ldrh	r0, [r4]
 371 005c 3D4B     		ldr	r3, .L25+16
 372 005e 1968     		ldr	r1, [r3]
 373              		.loc 1 513 12 view .LVU96
 374 0060 8842     		cmp	r0, r1
 375 0062 60D3     		bcc	.L11
 376              		.loc 1 513 25 discriminator 1 view .LVU97
 377 0064 3C4B     		ldr	r3, .L25+20
 378 0066 1B68     		ldr	r3, [r3]
 379 0068 9842     		cmp	r0, r3
 380 006a 28BF     		it	cs
 381 006c 1846     		movcs	r0, r3
 382              		.loc 1 513 12 discriminator 1 view .LVU98
 383 006e 80B2     		uxth	r0, r0
 384              	.L12:
 385              	.LVL21:
 514:Core/Src/main.c ****   target_duty = map(gase_value, gase_zero_pos, gase_max_pos, 0, 2299);  
 386              		.loc 1 514 3 is_stmt 1 view .LVU99
 387              		.loc 1 514 17 is_stmt 0 view .LVU100
 388 0070 40F6FB03 		movw	r3, #2299
 389 0074 0093     		str	r3, [sp]
 390 0076 0023     		movs	r3, #0
 391 0078 374A     		ldr	r2, .L25+20
 392 007a 1268     		ldr	r2, [r2]
 393 007c FFF7FEFF 		bl	map
 394              	.LVL22:
 395              		.loc 1 514 15 discriminator 1 view .LVU101
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 17


 396 0080 364B     		ldr	r3, .L25+24
 397 0082 1880     		strh	r0, [r3]	@ movhi
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   if(!isMotorEnabled){target_duty = 0;}
 398              		.loc 1 516 3 is_stmt 1 view .LVU102
 399              		.loc 1 516 6 is_stmt 0 view .LVU103
 400 0084 364B     		ldr	r3, .L25+28
 401 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402              		.loc 1 516 5 view .LVU104
 403 0088 13B9     		cbnz	r3, .L13
 404              		.loc 1 516 23 is_stmt 1 discriminator 1 view .LVU105
 405              		.loc 1 516 35 is_stmt 0 discriminator 1 view .LVU106
 406 008a 344B     		ldr	r3, .L25+24
 407 008c 0022     		movs	r2, #0
 408 008e 1A80     		strh	r2, [r3]	@ movhi
 409              	.L13:
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   duty_dt++;
 410              		.loc 1 518 3 is_stmt 1 view .LVU107
 411              		.loc 1 518 10 is_stmt 0 view .LVU108
 412 0090 344A     		ldr	r2, .L25+32
 413 0092 1388     		ldrh	r3, [r2]
 414 0094 0133     		adds	r3, r3, #1
 415 0096 9BB2     		uxth	r3, r3
 416 0098 1380     		strh	r3, [r2]	@ movhi
 519:Core/Src/main.c ****   if(duty_dt >= 319){
 417              		.loc 1 519 3 is_stmt 1 view .LVU109
 418              		.loc 1 519 5 is_stmt 0 view .LVU110
 419 009a B3F59F7F 		cmp	r3, #318
 420 009e 19D9     		bls	.L14
 421              	.LBB9:
 520:Core/Src/main.c ****     duty_dt = 0;
 422              		.loc 1 520 5 is_stmt 1 view .LVU111
 423              		.loc 1 520 13 is_stmt 0 view .LVU112
 424 00a0 1346     		mov	r3, r2
 425 00a2 0022     		movs	r2, #0
 426 00a4 1A80     		strh	r2, [r3]	@ movhi
 521:Core/Src/main.c ****     int16_t diff = target_duty - duty;
 427              		.loc 1 521 5 is_stmt 1 view .LVU113
 428              		.loc 1 521 32 is_stmt 0 view .LVU114
 429 00a6 2D4B     		ldr	r3, .L25+24
 430 00a8 1F88     		ldrh	r7, [r3]
 431 00aa 2F4B     		ldr	r3, .L25+36
 432 00ac 1E88     		ldrh	r6, [r3]
 433              	.LVL23:
 434              		.loc 1 521 32 view .LVU115
 435 00ae BC1B     		subs	r4, r7, r6
 436              		.loc 1 521 13 view .LVU116
 437 00b0 24B2     		sxth	r4, r4
 438              	.LVL24:
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****     if (fabs(diff) <= MAX_DUTY_DELTA){
 439              		.loc 1 523 5 is_stmt 1 view .LVU117
 440              		.loc 1 523 9 is_stmt 0 view .LVU118
 441 00b2 2046     		mov	r0, r4
 442 00b4 FFF7FEFF 		bl	__aeabi_i2d
 443              	.LVL25:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 18


 444 00b8 21F00041 		bic	r1, r1, #-2147483648
 445              		.loc 1 523 8 view .LVU119
 446 00bc 0022     		movs	r2, #0
 447 00be 2B4B     		ldr	r3, .L25+40
 448 00c0 FFF7FEFF 		bl	__aeabi_dcmple
 449              	.LVL26:
 450 00c4 0028     		cmp	r0, #0
 451 00c6 30D0     		beq	.L22
 524:Core/Src/main.c ****       duty = target_duty;
 452              		.loc 1 524 7 is_stmt 1 view .LVU120
 453              		.loc 1 524 12 is_stmt 0 view .LVU121
 454 00c8 274B     		ldr	r3, .L25+36
 455 00ca 1F80     		strh	r7, [r3]	@ movhi
 456              	.L17:
 525:Core/Src/main.c ****     }else{
 526:Core/Src/main.c ****       duty += (diff > 0 ? MAX_DUTY_DELTA : -MAX_DUTY_DELTA);
 527:Core/Src/main.c ****     }
 528:Core/Src/main.c ****     MC_SetDuty(duty);
 457              		.loc 1 528 5 is_stmt 1 view .LVU122
 458 00cc 264B     		ldr	r3, .L25+36
 459 00ce 1888     		ldrh	r0, [r3]
 460 00d0 FFF7FEFF 		bl	MC_SetDuty
 461              	.LVL27:
 462              	.L14:
 463              		.loc 1 528 5 is_stmt 0 view .LVU123
 464              	.LBE9:
 529:Core/Src/main.c ****   }
 530:Core/Src/main.c ****   // Apply 
 531:Core/Src/main.c ****   if(old_halls != hall_value){
 465              		.loc 1 531 3 is_stmt 1 view .LVU124
 466              		.loc 1 531 16 is_stmt 0 view .LVU125
 467 00d4 1B4B     		ldr	r3, .L25
 468 00d6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 469              		.loc 1 531 5 view .LVU126
 470 00d8 A842     		cmp	r0, r5
 471 00da 30D1     		bne	.L24
 472              	.L19:
 532:Core/Src/main.c ****     MC_LoadStep(hall_value);
 533:Core/Src/main.c ****   }
 534:Core/Src/main.c ****   HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 473              		.loc 1 534 3 is_stmt 1 view .LVU127
 474 00dc 4FF40051 		mov	r1, #8192
 475 00e0 2348     		ldr	r0, .L25+44
 476 00e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 477              	.LVL28:
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 478              		.loc 1 536 3 view .LVU128
 479 00e6 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 480              	.LVL29:
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, isMotorEnabled);
 481              		.loc 1 538 3 view .LVU129
 482 00ea 224C     		ldr	r4, .L25+48
 483 00ec 1C4B     		ldr	r3, .L25+28
 484 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 485 00f0 0121     		movs	r1, #1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 19


 486 00f2 2046     		mov	r0, r4
 487 00f4 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 488              	.LVL30:
 539:Core/Src/main.c ****   HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR2, target_duty);
 489              		.loc 1 539 3 view .LVU130
 490 00f8 184B     		ldr	r3, .L25+24
 491 00fa 1A88     		ldrh	r2, [r3]
 492 00fc 0221     		movs	r1, #2
 493 00fe 2046     		mov	r0, r4
 494 0100 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 495              	.LVL31:
 540:Core/Src/main.c ****   HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, duty);
 496              		.loc 1 540 3 view .LVU131
 497 0104 184B     		ldr	r3, .L25+36
 498 0106 1A88     		ldrh	r2, [r3]
 499 0108 0321     		movs	r1, #3
 500 010a 2046     		mov	r0, r4
 501 010c FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 502              	.LVL32:
 541:Core/Src/main.c ****   HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR4, 0xAA55);
 503              		.loc 1 541 3 view .LVU132
 504 0110 4AF65522 		movw	r2, #43605
 505 0114 0421     		movs	r1, #4
 506 0116 2046     		mov	r0, r4
 507 0118 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 508              	.LVL33:
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   HAL_PWR_DisableBkUpAccess();
 509              		.loc 1 543 3 view .LVU133
 510 011c FFF7FEFF 		bl	HAL_PWR_DisableBkUpAccess
 511              	.LVL34:
 544:Core/Src/main.c **** }
 512              		.loc 1 544 1 is_stmt 0 view .LVU134
 513 0120 02B0     		add	sp, sp, #8
 514              		.cfi_remember_state
 515              		.cfi_def_cfa_offset 24
 516              		@ sp needed
 517 0122 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 518              	.LVL35:
 519              	.L11:
 520              		.cfi_restore_state
 513:Core/Src/main.c ****   target_duty = map(gase_value, gase_zero_pos, gase_max_pos, 0, 2299);  
 521              		.loc 1 513 12 discriminator 2 view .LVU135
 522 0126 88B2     		uxth	r0, r1
 523 0128 A2E7     		b	.L12
 524              	.LVL36:
 525              	.L22:
 526              	.LBB10:
 526:Core/Src/main.c ****     }
 527              		.loc 1 526 7 is_stmt 1 view .LVU136
 526:Core/Src/main.c ****     }
 528              		.loc 1 526 12 is_stmt 0 view .LVU137
 529 012a 002C     		cmp	r4, #0
 530 012c 04DD     		ble	.L20
 526:Core/Src/main.c ****     }
 531              		.loc 1 526 12 discriminator 1 view .LVU138
 532 012e 0823     		movs	r3, #8
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 20


 533              	.L18:
 526:Core/Src/main.c ****     }
 534              		.loc 1 526 12 discriminator 4 view .LVU139
 535 0130 1E44     		add	r6, r6, r3
 536 0132 0D4B     		ldr	r3, .L25+36
 537 0134 1E80     		strh	r6, [r3]	@ movhi
 538 0136 C9E7     		b	.L17
 539              	.L20:
 526:Core/Src/main.c ****     }
 540              		.loc 1 526 12 discriminator 2 view .LVU140
 541 0138 4FF6F873 		movw	r3, #65528
 542 013c F8E7     		b	.L18
 543              	.LVL37:
 544              	.L24:
 526:Core/Src/main.c ****     }
 545              		.loc 1 526 12 discriminator 2 view .LVU141
 546              	.LBE10:
 532:Core/Src/main.c ****   }
 547              		.loc 1 532 5 is_stmt 1 view .LVU142
 548 013e FFF7FEFF 		bl	MC_LoadStep
 549              	.LVL38:
 550 0142 CBE7     		b	.L19
 551              	.L26:
 552              		.align	2
 553              	.L25:
 554 0144 00000000 		.word	hall_value
 555 0148 000C0140 		.word	1073810432
 556 014c 00000000 		.word	adc_value
 557 0150 00000000 		.word	hadc1
 558 0154 00000000 		.word	gase_zero_pos
 559 0158 00000000 		.word	gase_max_pos
 560 015c 00000000 		.word	target_duty
 561 0160 00000000 		.word	isMotorEnabled
 562 0164 00000000 		.word	duty_dt
 563 0168 00000000 		.word	duty
 564 016c 00002040 		.word	1075838976
 565 0170 00100140 		.word	1073811456
 566 0174 00000000 		.word	hrtc
 567              		.cfi_endproc
 568              	.LFE77:
 570              		.section	.text.Error_Handler,"ax",%progbits
 571              		.align	1
 572              		.global	Error_Handler
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	Error_Handler:
 578              	.LFB78:
 545:Core/Src/main.c **** /* USER CODE END 4 */
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** /**
 548:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 549:Core/Src/main.c ****   * @retval None
 550:Core/Src/main.c ****   */
 551:Core/Src/main.c **** void Error_Handler(void)
 552:Core/Src/main.c **** {
 579              		.loc 1 552 1 view -0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 21


 580              		.cfi_startproc
 581              		@ Volatile: function does not return.
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 553:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 554:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 555:Core/Src/main.c ****   __disable_irq();
 585              		.loc 1 555 3 view .LVU144
 586              	.LBB11:
 587              	.LBI11:
 588              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 22


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 23


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 589              		.loc 2 140 27 view .LVU145
 590              	.LBB12:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 591              		.loc 2 142 3 view .LVU146
 592              		.syntax unified
 593              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 594 0000 72B6     		cpsid i
 595              	@ 0 "" 2
 596              		.thumb
 597              		.syntax unified
 598              	.L28:
 599              	.LBE12:
 600              	.LBE11:
 556:Core/Src/main.c ****   while (1)
 601              		.loc 1 556 3 view .LVU147
 557:Core/Src/main.c ****   {
 558:Core/Src/main.c ****   }
 602              		.loc 1 558 3 view .LVU148
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 24


 556:Core/Src/main.c ****   while (1)
 603              		.loc 1 556 9 view .LVU149
 604 0002 FEE7     		b	.L28
 605              		.cfi_endproc
 606              	.LFE78:
 608              		.section	.text.MX_ADC1_Init,"ax",%progbits
 609              		.align	1
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	MX_ADC1_Init:
 615              	.LFB70:
 248:Core/Src/main.c **** 
 616              		.loc 1 248 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 16
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620 0000 00B5     		push	{lr}
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 14, -4
 623 0002 85B0     		sub	sp, sp, #20
 624              		.cfi_def_cfa_offset 24
 254:Core/Src/main.c **** 
 625              		.loc 1 254 3 view .LVU151
 254:Core/Src/main.c **** 
 626              		.loc 1 254 26 is_stmt 0 view .LVU152
 627 0004 0023     		movs	r3, #0
 628 0006 0193     		str	r3, [sp, #4]
 629 0008 0293     		str	r3, [sp, #8]
 630 000a 0393     		str	r3, [sp, #12]
 262:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 631              		.loc 1 262 3 is_stmt 1 view .LVU153
 262:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 632              		.loc 1 262 18 is_stmt 0 view .LVU154
 633 000c 0F48     		ldr	r0, .L35
 634 000e 104A     		ldr	r2, .L35+4
 635 0010 0260     		str	r2, [r0]
 263:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 636              		.loc 1 263 3 is_stmt 1 view .LVU155
 263:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 637              		.loc 1 263 27 is_stmt 0 view .LVU156
 638 0012 8360     		str	r3, [r0, #8]
 264:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 639              		.loc 1 264 3 is_stmt 1 view .LVU157
 264:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 640              		.loc 1 264 33 is_stmt 0 view .LVU158
 641 0014 0373     		strb	r3, [r0, #12]
 265:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 642              		.loc 1 265 3 is_stmt 1 view .LVU159
 265:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 643              		.loc 1 265 36 is_stmt 0 view .LVU160
 644 0016 0375     		strb	r3, [r0, #20]
 266:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 645              		.loc 1 266 3 is_stmt 1 view .LVU161
 266:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 646              		.loc 1 266 31 is_stmt 0 view .LVU162
 647 0018 4FF46022 		mov	r2, #917504
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 25


 648 001c C261     		str	r2, [r0, #28]
 267:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 649              		.loc 1 267 3 is_stmt 1 view .LVU163
 267:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 650              		.loc 1 267 24 is_stmt 0 view .LVU164
 651 001e 4360     		str	r3, [r0, #4]
 268:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 652              		.loc 1 268 3 is_stmt 1 view .LVU165
 268:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 653              		.loc 1 268 30 is_stmt 0 view .LVU166
 654 0020 0123     		movs	r3, #1
 655 0022 0361     		str	r3, [r0, #16]
 269:Core/Src/main.c ****   {
 656              		.loc 1 269 3 is_stmt 1 view .LVU167
 269:Core/Src/main.c ****   {
 657              		.loc 1 269 7 is_stmt 0 view .LVU168
 658 0024 FFF7FEFF 		bl	HAL_ADC_Init
 659              	.LVL39:
 269:Core/Src/main.c ****   {
 660              		.loc 1 269 6 discriminator 1 view .LVU169
 661 0028 60B9     		cbnz	r0, .L33
 276:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 662              		.loc 1 276 3 is_stmt 1 view .LVU170
 276:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 663              		.loc 1 276 19 is_stmt 0 view .LVU171
 664 002a 0023     		movs	r3, #0
 665 002c 0193     		str	r3, [sp, #4]
 277:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 666              		.loc 1 277 3 is_stmt 1 view .LVU172
 277:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 667              		.loc 1 277 16 is_stmt 0 view .LVU173
 668 002e 0122     		movs	r2, #1
 669 0030 0292     		str	r2, [sp, #8]
 278:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 670              		.loc 1 278 3 is_stmt 1 view .LVU174
 278:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 671              		.loc 1 278 24 is_stmt 0 view .LVU175
 672 0032 0393     		str	r3, [sp, #12]
 279:Core/Src/main.c ****   {
 673              		.loc 1 279 3 is_stmt 1 view .LVU176
 279:Core/Src/main.c ****   {
 674              		.loc 1 279 7 is_stmt 0 view .LVU177
 675 0034 01A9     		add	r1, sp, #4
 676 0036 0548     		ldr	r0, .L35
 677 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 678              	.LVL40:
 279:Core/Src/main.c ****   {
 679              		.loc 1 279 6 discriminator 1 view .LVU178
 680 003c 20B9     		cbnz	r0, .L34
 287:Core/Src/main.c **** 
 681              		.loc 1 287 1 view .LVU179
 682 003e 05B0     		add	sp, sp, #20
 683              		.cfi_remember_state
 684              		.cfi_def_cfa_offset 4
 685              		@ sp needed
 686 0040 5DF804FB 		ldr	pc, [sp], #4
 687              	.L33:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 26


 688              		.cfi_restore_state
 271:Core/Src/main.c ****   }
 689              		.loc 1 271 5 is_stmt 1 view .LVU180
 690 0044 FFF7FEFF 		bl	Error_Handler
 691              	.LVL41:
 692              	.L34:
 281:Core/Src/main.c ****   }
 693              		.loc 1 281 5 view .LVU181
 694 0048 FFF7FEFF 		bl	Error_Handler
 695              	.LVL42:
 696              	.L36:
 697              		.align	2
 698              	.L35:
 699 004c 00000000 		.word	hadc1
 700 0050 00240140 		.word	1073816576
 701              		.cfi_endproc
 702              	.LFE70:
 704              		.section	.text.MX_TIM1_Init,"ax",%progbits
 705              		.align	1
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 710              	MX_TIM1_Init:
 711              	.LFB73:
 354:Core/Src/main.c **** 
 712              		.loc 1 354 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 88
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716 0000 10B5     		push	{r4, lr}
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 4, -8
 719              		.cfi_offset 14, -4
 720 0002 96B0     		sub	sp, sp, #88
 721              		.cfi_def_cfa_offset 96
 360:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 722              		.loc 1 360 3 view .LVU183
 360:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 723              		.loc 1 360 26 is_stmt 0 view .LVU184
 724 0004 0024     		movs	r4, #0
 725 0006 1294     		str	r4, [sp, #72]
 726 0008 1394     		str	r4, [sp, #76]
 727 000a 1494     		str	r4, [sp, #80]
 728 000c 1594     		str	r4, [sp, #84]
 361:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 729              		.loc 1 361 3 is_stmt 1 view .LVU185
 361:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 730              		.loc 1 361 27 is_stmt 0 view .LVU186
 731 000e 1094     		str	r4, [sp, #64]
 732 0010 1194     		str	r4, [sp, #68]
 362:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 733              		.loc 1 362 3 is_stmt 1 view .LVU187
 362:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 734              		.loc 1 362 22 is_stmt 0 view .LVU188
 735 0012 0994     		str	r4, [sp, #36]
 736 0014 0A94     		str	r4, [sp, #40]
 737 0016 0B94     		str	r4, [sp, #44]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 27


 738 0018 0C94     		str	r4, [sp, #48]
 739 001a 0D94     		str	r4, [sp, #52]
 740 001c 0E94     		str	r4, [sp, #56]
 741 001e 0F94     		str	r4, [sp, #60]
 363:Core/Src/main.c **** 
 742              		.loc 1 363 3 is_stmt 1 view .LVU189
 363:Core/Src/main.c **** 
 743              		.loc 1 363 34 is_stmt 0 view .LVU190
 744 0020 2022     		movs	r2, #32
 745 0022 2146     		mov	r1, r4
 746 0024 01A8     		add	r0, sp, #4
 747 0026 FFF7FEFF 		bl	memset
 748              	.LVL43:
 368:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 749              		.loc 1 368 3 is_stmt 1 view .LVU191
 368:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 750              		.loc 1 368 18 is_stmt 0 view .LVU192
 751 002a 3248     		ldr	r0, .L55
 752 002c 324B     		ldr	r3, .L55+4
 753 002e 0360     		str	r3, [r0]
 369:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 754              		.loc 1 369 3 is_stmt 1 view .LVU193
 369:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 755              		.loc 1 369 24 is_stmt 0 view .LVU194
 756 0030 4460     		str	r4, [r0, #4]
 370:Core/Src/main.c ****   htim1.Init.Period = 2399;
 757              		.loc 1 370 3 is_stmt 1 view .LVU195
 370:Core/Src/main.c ****   htim1.Init.Period = 2399;
 758              		.loc 1 370 26 is_stmt 0 view .LVU196
 759 0032 8460     		str	r4, [r0, #8]
 371:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 760              		.loc 1 371 3 is_stmt 1 view .LVU197
 371:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 761              		.loc 1 371 21 is_stmt 0 view .LVU198
 762 0034 40F65F13 		movw	r3, #2399
 763 0038 C360     		str	r3, [r0, #12]
 372:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 764              		.loc 1 372 3 is_stmt 1 view .LVU199
 372:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 765              		.loc 1 372 28 is_stmt 0 view .LVU200
 766 003a 0461     		str	r4, [r0, #16]
 373:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 767              		.loc 1 373 3 is_stmt 1 view .LVU201
 373:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 768              		.loc 1 373 32 is_stmt 0 view .LVU202
 769 003c 4461     		str	r4, [r0, #20]
 374:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 770              		.loc 1 374 3 is_stmt 1 view .LVU203
 374:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 771              		.loc 1 374 32 is_stmt 0 view .LVU204
 772 003e 8461     		str	r4, [r0, #24]
 375:Core/Src/main.c ****   {
 773              		.loc 1 375 3 is_stmt 1 view .LVU205
 375:Core/Src/main.c ****   {
 774              		.loc 1 375 7 is_stmt 0 view .LVU206
 775 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 776              	.LVL44:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 28


 375:Core/Src/main.c ****   {
 777              		.loc 1 375 6 discriminator 1 view .LVU207
 778 0044 0028     		cmp	r0, #0
 779 0046 44D1     		bne	.L47
 379:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 780              		.loc 1 379 3 is_stmt 1 view .LVU208
 379:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 781              		.loc 1 379 34 is_stmt 0 view .LVU209
 782 0048 4FF48053 		mov	r3, #4096
 783 004c 1293     		str	r3, [sp, #72]
 380:Core/Src/main.c ****   {
 784              		.loc 1 380 3 is_stmt 1 view .LVU210
 380:Core/Src/main.c ****   {
 785              		.loc 1 380 7 is_stmt 0 view .LVU211
 786 004e 12A9     		add	r1, sp, #72
 787 0050 2848     		ldr	r0, .L55
 788 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 789              	.LVL45:
 380:Core/Src/main.c ****   {
 790              		.loc 1 380 6 discriminator 1 view .LVU212
 791 0056 0028     		cmp	r0, #0
 792 0058 3DD1     		bne	.L48
 384:Core/Src/main.c ****   {
 793              		.loc 1 384 3 is_stmt 1 view .LVU213
 384:Core/Src/main.c ****   {
 794              		.loc 1 384 7 is_stmt 0 view .LVU214
 795 005a 2648     		ldr	r0, .L55
 796 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 797              	.LVL46:
 384:Core/Src/main.c ****   {
 798              		.loc 1 384 6 discriminator 1 view .LVU215
 799 0060 0028     		cmp	r0, #0
 800 0062 3AD1     		bne	.L49
 388:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 801              		.loc 1 388 3 is_stmt 1 view .LVU216
 388:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 802              		.loc 1 388 37 is_stmt 0 view .LVU217
 803 0064 0023     		movs	r3, #0
 804 0066 1093     		str	r3, [sp, #64]
 389:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 805              		.loc 1 389 3 is_stmt 1 view .LVU218
 389:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 806              		.loc 1 389 33 is_stmt 0 view .LVU219
 807 0068 1193     		str	r3, [sp, #68]
 390:Core/Src/main.c ****   {
 808              		.loc 1 390 3 is_stmt 1 view .LVU220
 390:Core/Src/main.c ****   {
 809              		.loc 1 390 7 is_stmt 0 view .LVU221
 810 006a 10A9     		add	r1, sp, #64
 811 006c 2148     		ldr	r0, .L55
 812 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 813              	.LVL47:
 390:Core/Src/main.c ****   {
 814              		.loc 1 390 6 discriminator 1 view .LVU222
 815 0072 0028     		cmp	r0, #0
 816 0074 33D1     		bne	.L50
 394:Core/Src/main.c ****   sConfigOC.Pulse = 0;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 29


 817              		.loc 1 394 3 is_stmt 1 view .LVU223
 394:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 818              		.loc 1 394 20 is_stmt 0 view .LVU224
 819 0076 6023     		movs	r3, #96
 820 0078 0993     		str	r3, [sp, #36]
 395:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 821              		.loc 1 395 3 is_stmt 1 view .LVU225
 395:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 822              		.loc 1 395 19 is_stmt 0 view .LVU226
 823 007a 0022     		movs	r2, #0
 824 007c 0A92     		str	r2, [sp, #40]
 396:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 825              		.loc 1 396 3 is_stmt 1 view .LVU227
 396:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 826              		.loc 1 396 24 is_stmt 0 view .LVU228
 827 007e 0B92     		str	r2, [sp, #44]
 397:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 828              		.loc 1 397 3 is_stmt 1 view .LVU229
 397:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 829              		.loc 1 397 25 is_stmt 0 view .LVU230
 830 0080 0C92     		str	r2, [sp, #48]
 398:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 831              		.loc 1 398 3 is_stmt 1 view .LVU231
 398:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 832              		.loc 1 398 24 is_stmt 0 view .LVU232
 833 0082 0D92     		str	r2, [sp, #52]
 399:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 834              		.loc 1 399 3 is_stmt 1 view .LVU233
 399:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 835              		.loc 1 399 25 is_stmt 0 view .LVU234
 836 0084 0E92     		str	r2, [sp, #56]
 400:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 837              		.loc 1 400 3 is_stmt 1 view .LVU235
 400:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 838              		.loc 1 400 26 is_stmt 0 view .LVU236
 839 0086 0F92     		str	r2, [sp, #60]
 401:Core/Src/main.c ****   {
 840              		.loc 1 401 3 is_stmt 1 view .LVU237
 401:Core/Src/main.c ****   {
 841              		.loc 1 401 7 is_stmt 0 view .LVU238
 842 0088 09A9     		add	r1, sp, #36
 843 008a 1A48     		ldr	r0, .L55
 844 008c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 845              	.LVL48:
 401:Core/Src/main.c ****   {
 846              		.loc 1 401 6 discriminator 1 view .LVU239
 847 0090 38BB     		cbnz	r0, .L51
 405:Core/Src/main.c ****   {
 848              		.loc 1 405 3 is_stmt 1 view .LVU240
 405:Core/Src/main.c ****   {
 849              		.loc 1 405 7 is_stmt 0 view .LVU241
 850 0092 0422     		movs	r2, #4
 851 0094 09A9     		add	r1, sp, #36
 852 0096 1748     		ldr	r0, .L55
 853 0098 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 854              	.LVL49:
 405:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 30


 855              		.loc 1 405 6 discriminator 1 view .LVU242
 856 009c 18BB     		cbnz	r0, .L52
 409:Core/Src/main.c ****   {
 857              		.loc 1 409 3 is_stmt 1 view .LVU243
 409:Core/Src/main.c ****   {
 858              		.loc 1 409 7 is_stmt 0 view .LVU244
 859 009e 0822     		movs	r2, #8
 860 00a0 09A9     		add	r1, sp, #36
 861 00a2 1448     		ldr	r0, .L55
 862 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 863              	.LVL50:
 409:Core/Src/main.c ****   {
 864              		.loc 1 409 6 discriminator 1 view .LVU245
 865 00a8 F8B9     		cbnz	r0, .L53
 413:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 866              		.loc 1 413 3 is_stmt 1 view .LVU246
 413:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 867              		.loc 1 413 40 is_stmt 0 view .LVU247
 868 00aa 0023     		movs	r3, #0
 869 00ac 0193     		str	r3, [sp, #4]
 414:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 870              		.loc 1 414 3 is_stmt 1 view .LVU248
 414:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 871              		.loc 1 414 41 is_stmt 0 view .LVU249
 872 00ae 0293     		str	r3, [sp, #8]
 415:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 873              		.loc 1 415 3 is_stmt 1 view .LVU250
 415:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 874              		.loc 1 415 34 is_stmt 0 view .LVU251
 875 00b0 0393     		str	r3, [sp, #12]
 416:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 876              		.loc 1 416 3 is_stmt 1 view .LVU252
 416:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 877              		.loc 1 416 33 is_stmt 0 view .LVU253
 878 00b2 0493     		str	r3, [sp, #16]
 417:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 879              		.loc 1 417 3 is_stmt 1 view .LVU254
 417:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 880              		.loc 1 417 35 is_stmt 0 view .LVU255
 881 00b4 0593     		str	r3, [sp, #20]
 418:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 882              		.loc 1 418 3 is_stmt 1 view .LVU256
 418:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 883              		.loc 1 418 38 is_stmt 0 view .LVU257
 884 00b6 4FF40052 		mov	r2, #8192
 885 00ba 0692     		str	r2, [sp, #24]
 419:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 886              		.loc 1 419 3 is_stmt 1 view .LVU258
 419:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 887              		.loc 1 419 40 is_stmt 0 view .LVU259
 888 00bc 0893     		str	r3, [sp, #32]
 420:Core/Src/main.c ****   {
 889              		.loc 1 420 3 is_stmt 1 view .LVU260
 420:Core/Src/main.c ****   {
 890              		.loc 1 420 7 is_stmt 0 view .LVU261
 891 00be 01A9     		add	r1, sp, #4
 892 00c0 0C48     		ldr	r0, .L55
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 31


 893 00c2 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 894              	.LVL51:
 420:Core/Src/main.c ****   {
 895              		.loc 1 420 6 discriminator 1 view .LVU262
 896 00c6 90B9     		cbnz	r0, .L54
 427:Core/Src/main.c **** 
 897              		.loc 1 427 3 is_stmt 1 view .LVU263
 898 00c8 0A48     		ldr	r0, .L55
 899 00ca FFF7FEFF 		bl	HAL_TIM_MspPostInit
 900              	.LVL52:
 429:Core/Src/main.c **** 
 901              		.loc 1 429 1 is_stmt 0 view .LVU264
 902 00ce 16B0     		add	sp, sp, #88
 903              		.cfi_remember_state
 904              		.cfi_def_cfa_offset 8
 905              		@ sp needed
 906 00d0 10BD     		pop	{r4, pc}
 907              	.L47:
 908              		.cfi_restore_state
 377:Core/Src/main.c ****   }
 909              		.loc 1 377 5 is_stmt 1 view .LVU265
 910 00d2 FFF7FEFF 		bl	Error_Handler
 911              	.LVL53:
 912              	.L48:
 382:Core/Src/main.c ****   }
 913              		.loc 1 382 5 view .LVU266
 914 00d6 FFF7FEFF 		bl	Error_Handler
 915              	.LVL54:
 916              	.L49:
 386:Core/Src/main.c ****   }
 917              		.loc 1 386 5 view .LVU267
 918 00da FFF7FEFF 		bl	Error_Handler
 919              	.LVL55:
 920              	.L50:
 392:Core/Src/main.c ****   }
 921              		.loc 1 392 5 view .LVU268
 922 00de FFF7FEFF 		bl	Error_Handler
 923              	.LVL56:
 924              	.L51:
 403:Core/Src/main.c ****   }
 925              		.loc 1 403 5 view .LVU269
 926 00e2 FFF7FEFF 		bl	Error_Handler
 927              	.LVL57:
 928              	.L52:
 407:Core/Src/main.c ****   }
 929              		.loc 1 407 5 view .LVU270
 930 00e6 FFF7FEFF 		bl	Error_Handler
 931              	.LVL58:
 932              	.L53:
 411:Core/Src/main.c ****   }
 933              		.loc 1 411 5 view .LVU271
 934 00ea FFF7FEFF 		bl	Error_Handler
 935              	.LVL59:
 936              	.L54:
 422:Core/Src/main.c ****   }
 937              		.loc 1 422 5 view .LVU272
 938 00ee FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 32


 939              	.LVL60:
 940              	.L56:
 941 00f2 00BF     		.align	2
 942              	.L55:
 943 00f4 00000000 		.word	htim1
 944 00f8 002C0140 		.word	1073818624
 945              		.cfi_endproc
 946              	.LFE73:
 948              		.section	.text.MX_RTC_Init,"ax",%progbits
 949              		.align	1
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	MX_RTC_Init:
 955              	.LFB72:
 323:Core/Src/main.c **** 
 956              		.loc 1 323 1 view -0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960 0000 08B5     		push	{r3, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 3, -8
 963              		.cfi_offset 14, -4
 335:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 964              		.loc 1 335 3 view .LVU274
 335:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 965              		.loc 1 335 17 is_stmt 0 view .LVU275
 966 0002 0748     		ldr	r0, .L61
 967 0004 074B     		ldr	r3, .L61+4
 968 0006 0360     		str	r3, [r0]
 336:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 969              		.loc 1 336 3 is_stmt 1 view .LVU276
 336:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 970              		.loc 1 336 26 is_stmt 0 view .LVU277
 971 0008 4FF0FF33 		mov	r3, #-1
 972 000c 4360     		str	r3, [r0, #4]
 337:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 973              		.loc 1 337 3 is_stmt 1 view .LVU278
 337:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 974              		.loc 1 337 20 is_stmt 0 view .LVU279
 975 000e 4FF48073 		mov	r3, #256
 976 0012 8360     		str	r3, [r0, #8]
 338:Core/Src/main.c ****   {
 977              		.loc 1 338 3 is_stmt 1 view .LVU280
 338:Core/Src/main.c ****   {
 978              		.loc 1 338 7 is_stmt 0 view .LVU281
 979 0014 FFF7FEFF 		bl	HAL_RTC_Init
 980              	.LVL61:
 338:Core/Src/main.c ****   {
 981              		.loc 1 338 6 discriminator 1 view .LVU282
 982 0018 00B9     		cbnz	r0, .L60
 346:Core/Src/main.c **** 
 983              		.loc 1 346 1 view .LVU283
 984 001a 08BD     		pop	{r3, pc}
 985              	.L60:
 340:Core/Src/main.c ****   }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 33


 986              		.loc 1 340 5 is_stmt 1 view .LVU284
 987 001c FFF7FEFF 		bl	Error_Handler
 988              	.LVL62:
 989              	.L62:
 990              		.align	2
 991              	.L61:
 992 0020 00000000 		.word	hrtc
 993 0024 00280040 		.word	1073752064
 994              		.cfi_endproc
 995              	.LFE72:
 997              		.section	.text.MX_IWDG_Init,"ax",%progbits
 998              		.align	1
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1003              	MX_IWDG_Init:
 1004              	.LFB71:
 295:Core/Src/main.c **** 
 1005              		.loc 1 295 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009 0000 08B5     		push	{r3, lr}
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 3, -8
 1012              		.cfi_offset 14, -4
 304:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 1013              		.loc 1 304 3 view .LVU286
 304:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 1014              		.loc 1 304 18 is_stmt 0 view .LVU287
 1015 0002 0648     		ldr	r0, .L67
 1016 0004 064B     		ldr	r3, .L67+4
 1017 0006 0360     		str	r3, [r0]
 305:Core/Src/main.c ****   hiwdg.Init.Reload = 80;
 1018              		.loc 1 305 3 is_stmt 1 view .LVU288
 305:Core/Src/main.c ****   hiwdg.Init.Reload = 80;
 1019              		.loc 1 305 24 is_stmt 0 view .LVU289
 1020 0008 0023     		movs	r3, #0
 1021 000a 4360     		str	r3, [r0, #4]
 306:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 1022              		.loc 1 306 3 is_stmt 1 view .LVU290
 306:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 1023              		.loc 1 306 21 is_stmt 0 view .LVU291
 1024 000c 5023     		movs	r3, #80
 1025 000e 8360     		str	r3, [r0, #8]
 307:Core/Src/main.c ****   {
 1026              		.loc 1 307 3 is_stmt 1 view .LVU292
 307:Core/Src/main.c ****   {
 1027              		.loc 1 307 7 is_stmt 0 view .LVU293
 1028 0010 FFF7FEFF 		bl	HAL_IWDG_Init
 1029              	.LVL63:
 307:Core/Src/main.c ****   {
 1030              		.loc 1 307 6 discriminator 1 view .LVU294
 1031 0014 00B9     		cbnz	r0, .L66
 315:Core/Src/main.c **** 
 1032              		.loc 1 315 1 view .LVU295
 1033 0016 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 34


 1034              	.L66:
 309:Core/Src/main.c ****   }
 1035              		.loc 1 309 5 is_stmt 1 view .LVU296
 1036 0018 FFF7FEFF 		bl	Error_Handler
 1037              	.LVL64:
 1038              	.L68:
 1039              		.align	2
 1040              	.L67:
 1041 001c 00000000 		.word	hiwdg
 1042 0020 00300040 		.word	1073754112
 1043              		.cfi_endproc
 1044              	.LFE71:
 1046              		.section	.text.SystemClock_Config,"ax",%progbits
 1047              		.align	1
 1048              		.global	SystemClock_Config
 1049              		.syntax unified
 1050              		.thumb
 1051              		.thumb_func
 1053              	SystemClock_Config:
 1054              	.LFB69:
 195:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1055              		.loc 1 195 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 80
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059 0000 10B5     		push	{r4, lr}
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 4, -8
 1062              		.cfi_offset 14, -4
 1063 0002 94B0     		sub	sp, sp, #80
 1064              		.cfi_def_cfa_offset 88
 196:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1065              		.loc 1 196 3 view .LVU298
 196:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1066              		.loc 1 196 22 is_stmt 0 view .LVU299
 1067 0004 0AAC     		add	r4, sp, #40
 1068 0006 2822     		movs	r2, #40
 1069 0008 0021     		movs	r1, #0
 1070 000a 2046     		mov	r0, r4
 1071 000c FFF7FEFF 		bl	memset
 1072              	.LVL65:
 197:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1073              		.loc 1 197 3 is_stmt 1 view .LVU300
 197:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1074              		.loc 1 197 22 is_stmt 0 view .LVU301
 1075 0010 0023     		movs	r3, #0
 1076 0012 0593     		str	r3, [sp, #20]
 1077 0014 0693     		str	r3, [sp, #24]
 1078 0016 0793     		str	r3, [sp, #28]
 1079 0018 0893     		str	r3, [sp, #32]
 1080 001a 0993     		str	r3, [sp, #36]
 198:Core/Src/main.c **** 
 1081              		.loc 1 198 3 is_stmt 1 view .LVU302
 198:Core/Src/main.c **** 
 1082              		.loc 1 198 28 is_stmt 0 view .LVU303
 1083 001c 0193     		str	r3, [sp, #4]
 1084 001e 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 35


 1085 0020 0393     		str	r3, [sp, #12]
 1086 0022 0493     		str	r3, [sp, #16]
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1087              		.loc 1 203 3 is_stmt 1 view .LVU304
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1088              		.loc 1 203 36 is_stmt 0 view .LVU305
 1089 0024 0923     		movs	r3, #9
 1090 0026 0A93     		str	r3, [sp, #40]
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1091              		.loc 1 204 3 is_stmt 1 view .LVU306
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1092              		.loc 1 204 30 is_stmt 0 view .LVU307
 1093 0028 4FF48033 		mov	r3, #65536
 1094 002c 0B93     		str	r3, [sp, #44]
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1095              		.loc 1 205 3 is_stmt 1 view .LVU308
 206:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1096              		.loc 1 206 3 view .LVU309
 206:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1097              		.loc 1 206 30 is_stmt 0 view .LVU310
 1098 002e 0122     		movs	r2, #1
 1099 0030 0E92     		str	r2, [sp, #56]
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1100              		.loc 1 207 3 is_stmt 1 view .LVU311
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1101              		.loc 1 207 30 is_stmt 0 view .LVU312
 1102 0032 1092     		str	r2, [sp, #64]
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1103              		.loc 1 208 3 is_stmt 1 view .LVU313
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1104              		.loc 1 208 34 is_stmt 0 view .LVU314
 1105 0034 0222     		movs	r2, #2
 1106 0036 1192     		str	r2, [sp, #68]
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1107              		.loc 1 209 3 is_stmt 1 view .LVU315
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1108              		.loc 1 209 35 is_stmt 0 view .LVU316
 1109 0038 1293     		str	r3, [sp, #72]
 210:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1110              		.loc 1 210 3 is_stmt 1 view .LVU317
 210:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1111              		.loc 1 210 32 is_stmt 0 view .LVU318
 1112 003a 4FF4E013 		mov	r3, #1835008
 1113 003e 1393     		str	r3, [sp, #76]
 211:Core/Src/main.c ****   {
 1114              		.loc 1 211 3 is_stmt 1 view .LVU319
 211:Core/Src/main.c ****   {
 1115              		.loc 1 211 7 is_stmt 0 view .LVU320
 1116 0040 2046     		mov	r0, r4
 1117 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1118              	.LVL66:
 211:Core/Src/main.c ****   {
 1119              		.loc 1 211 6 discriminator 1 view .LVU321
 1120 0046 E8B9     		cbnz	r0, .L74
 218:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1121              		.loc 1 218 3 is_stmt 1 view .LVU322
 218:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 36


 1122              		.loc 1 218 31 is_stmt 0 view .LVU323
 1123 0048 0F23     		movs	r3, #15
 1124 004a 0593     		str	r3, [sp, #20]
 220:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1125              		.loc 1 220 3 is_stmt 1 view .LVU324
 220:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1126              		.loc 1 220 34 is_stmt 0 view .LVU325
 1127 004c 0221     		movs	r1, #2
 1128 004e 0691     		str	r1, [sp, #24]
 221:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1129              		.loc 1 221 3 is_stmt 1 view .LVU326
 221:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1130              		.loc 1 221 35 is_stmt 0 view .LVU327
 1131 0050 0023     		movs	r3, #0
 1132 0052 0793     		str	r3, [sp, #28]
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1133              		.loc 1 222 3 is_stmt 1 view .LVU328
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1134              		.loc 1 222 36 is_stmt 0 view .LVU329
 1135 0054 4FF48062 		mov	r2, #1024
 1136 0058 0892     		str	r2, [sp, #32]
 223:Core/Src/main.c **** 
 1137              		.loc 1 223 3 is_stmt 1 view .LVU330
 223:Core/Src/main.c **** 
 1138              		.loc 1 223 36 is_stmt 0 view .LVU331
 1139 005a 0993     		str	r3, [sp, #36]
 225:Core/Src/main.c ****   {
 1140              		.loc 1 225 3 is_stmt 1 view .LVU332
 225:Core/Src/main.c ****   {
 1141              		.loc 1 225 7 is_stmt 0 view .LVU333
 1142 005c 05A8     		add	r0, sp, #20
 1143 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1144              	.LVL67:
 225:Core/Src/main.c ****   {
 1145              		.loc 1 225 6 discriminator 1 view .LVU334
 1146 0062 88B9     		cbnz	r0, .L75
 229:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1147              		.loc 1 229 3 is_stmt 1 view .LVU335
 229:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1148              		.loc 1 229 38 is_stmt 0 view .LVU336
 1149 0064 0323     		movs	r3, #3
 1150 0066 0193     		str	r3, [sp, #4]
 230:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1151              		.loc 1 230 3 is_stmt 1 view .LVU337
 230:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1152              		.loc 1 230 35 is_stmt 0 view .LVU338
 1153 0068 4FF40073 		mov	r3, #512
 1154 006c 0293     		str	r3, [sp, #8]
 231:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1155              		.loc 1 231 3 is_stmt 1 view .LVU339
 231:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1156              		.loc 1 231 35 is_stmt 0 view .LVU340
 1157 006e 4FF40043 		mov	r3, #32768
 1158 0072 0393     		str	r3, [sp, #12]
 232:Core/Src/main.c ****   {
 1159              		.loc 1 232 3 is_stmt 1 view .LVU341
 232:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 37


 1160              		.loc 1 232 7 is_stmt 0 view .LVU342
 1161 0074 01A8     		add	r0, sp, #4
 1162 0076 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1163              	.LVL68:
 232:Core/Src/main.c ****   {
 1164              		.loc 1 232 6 discriminator 1 view .LVU343
 1165 007a 38B9     		cbnz	r0, .L76
 239:Core/Src/main.c **** }
 1166              		.loc 1 239 3 is_stmt 1 view .LVU344
 1167 007c FFF7FEFF 		bl	HAL_RCC_EnableCSS
 1168              	.LVL69:
 240:Core/Src/main.c **** 
 1169              		.loc 1 240 1 is_stmt 0 view .LVU345
 1170 0080 14B0     		add	sp, sp, #80
 1171              		.cfi_remember_state
 1172              		.cfi_def_cfa_offset 8
 1173              		@ sp needed
 1174 0082 10BD     		pop	{r4, pc}
 1175              	.L74:
 1176              		.cfi_restore_state
 213:Core/Src/main.c ****   }
 1177              		.loc 1 213 5 is_stmt 1 view .LVU346
 1178 0084 FFF7FEFF 		bl	Error_Handler
 1179              	.LVL70:
 1180              	.L75:
 227:Core/Src/main.c ****   }
 1181              		.loc 1 227 5 view .LVU347
 1182 0088 FFF7FEFF 		bl	Error_Handler
 1183              	.LVL71:
 1184              	.L76:
 234:Core/Src/main.c ****   }
 1185              		.loc 1 234 5 view .LVU348
 1186 008c FFF7FEFF 		bl	Error_Handler
 1187              	.LVL72:
 1188              		.cfi_endproc
 1189              	.LFE69:
 1191              		.section	.text.main,"ax",%progbits
 1192              		.align	1
 1193              		.global	main
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1198              	main:
 1199              	.LFB68:
 112:Core/Src/main.c **** 
 1200              		.loc 1 112 1 view -0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 0
 1203              		@ frame_needed = 0, uses_anonymous_args = 0
 1204 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1205              		.cfi_def_cfa_offset 24
 1206              		.cfi_offset 3, -24
 1207              		.cfi_offset 4, -20
 1208              		.cfi_offset 5, -16
 1209              		.cfi_offset 6, -12
 1210              		.cfi_offset 7, -8
 1211              		.cfi_offset 14, -4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 38


 121:Core/Src/main.c **** 
 1212              		.loc 1 121 3 view .LVU350
 1213 0002 FFF7FEFF 		bl	HAL_Init
 1214              	.LVL73:
 128:Core/Src/main.c **** 
 1215              		.loc 1 128 3 view .LVU351
 1216 0006 FFF7FEFF 		bl	SystemClock_Config
 1217              	.LVL74:
 135:Core/Src/main.c ****   MX_DMA_Init();
 1218              		.loc 1 135 3 view .LVU352
 1219 000a FFF7FEFF 		bl	MX_GPIO_Init
 1220              	.LVL75:
 136:Core/Src/main.c ****   MX_ADC1_Init();
 1221              		.loc 1 136 3 view .LVU353
 1222 000e FFF7FEFF 		bl	MX_DMA_Init
 1223              	.LVL76:
 137:Core/Src/main.c ****   MX_TIM1_Init();
 1224              		.loc 1 137 3 view .LVU354
 1225 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1226              	.LVL77:
 138:Core/Src/main.c ****   MX_IWDG_Init();
 1227              		.loc 1 138 3 view .LVU355
 1228 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1229              	.LVL78:
 139:Core/Src/main.c ****   MX_RTC_Init();
 1230              		.loc 1 139 3 view .LVU356
 1231 001a FFF7FEFF 		bl	MX_IWDG_Init
 1232              	.LVL79:
 140:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1233              		.loc 1 140 3 view .LVU357
 1234 001e FFF7FEFF 		bl	MX_RTC_Init
 1235              	.LVL80:
 142:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 1236              		.loc 1 142 3 view .LVU358
 1237 0022 314C     		ldr	r4, .L85
 1238 0024 2046     		mov	r0, r4
 1239 0026 FFF7FEFF 		bl	HAL_ADC_Stop
 1240              	.LVL81:
 143:Core/Src/main.c **** 
 1241              		.loc 1 143 3 view .LVU359
 1242 002a 2046     		mov	r0, r4
 1243 002c FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1244              	.LVL82:
 145:Core/Src/main.c **** 
 1245              		.loc 1 145 3 view .LVU360
 1246 0030 0122     		movs	r2, #1
 1247 0032 2E49     		ldr	r1, .L85+4
 1248 0034 2046     		mov	r0, r4
 1249 0036 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1250              	.LVL83:
 147:Core/Src/main.c ****   uint16_t targetDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR2);
 1251              		.loc 1 147 3 view .LVU361
 147:Core/Src/main.c ****   uint16_t targetDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR2);
 1252              		.loc 1 147 33 is_stmt 0 view .LVU362
 1253 003a 2D4C     		ldr	r4, .L85+8
 1254 003c 0121     		movs	r1, #1
 1255 003e 2046     		mov	r0, r4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 39


 1256 0040 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1257              	.LVL84:
 147:Core/Src/main.c ****   uint16_t targetDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR2);
 1258              		.loc 1 147 12 discriminator 1 view .LVU363
 1259 0044 85B2     		uxth	r5, r0
 1260              	.LVL85:
 148:Core/Src/main.c ****   uint16_t realDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR3);
 1261              		.loc 1 148 3 is_stmt 1 view .LVU364
 148:Core/Src/main.c ****   uint16_t realDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR3);
 1262              		.loc 1 148 36 is_stmt 0 view .LVU365
 1263 0046 0221     		movs	r1, #2
 1264 0048 2046     		mov	r0, r4
 1265 004a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1266              	.LVL86:
 148:Core/Src/main.c ****   uint16_t realDutyBackupValue = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR3);
 1267              		.loc 1 148 12 discriminator 1 view .LVU366
 1268 004e 86B2     		uxth	r6, r0
 1269              	.LVL87:
 149:Core/Src/main.c ****   uint16_t code = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR4);
 1270              		.loc 1 149 3 is_stmt 1 view .LVU367
 149:Core/Src/main.c ****   uint16_t code = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR4);
 1271              		.loc 1 149 34 is_stmt 0 view .LVU368
 1272 0050 0321     		movs	r1, #3
 1273 0052 2046     		mov	r0, r4
 1274 0054 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1275              	.LVL88:
 149:Core/Src/main.c ****   uint16_t code = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR4);
 1276              		.loc 1 149 12 discriminator 1 view .LVU369
 1277 0058 87B2     		uxth	r7, r0
 1278              	.LVL89:
 150:Core/Src/main.c **** 
 1279              		.loc 1 150 3 is_stmt 1 view .LVU370
 150:Core/Src/main.c **** 
 1280              		.loc 1 150 19 is_stmt 0 view .LVU371
 1281 005a 0421     		movs	r1, #4
 1282 005c 2046     		mov	r0, r4
 1283 005e FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1284              	.LVL90:
 150:Core/Src/main.c **** 
 1285              		.loc 1 150 12 discriminator 1 view .LVU372
 1286 0062 83B2     		uxth	r3, r0
 1287              	.LVL91:
 152:Core/Src/main.c ****     isMotorEnabled = motorEnBackupValue;
 1288              		.loc 1 152 3 is_stmt 1 view .LVU373
 152:Core/Src/main.c ****     isMotorEnabled = motorEnBackupValue;
 1289              		.loc 1 152 5 is_stmt 0 view .LVU374
 1290 0064 4AF65522 		movw	r2, #43605
 1291 0068 9342     		cmp	r3, r2
 1292 006a 18D0     		beq	.L83
 1293              	.LVL92:
 1294              	.L78:
 158:Core/Src/main.c ****   HAL_GPIO_WritePin(Start_Stop_LED_GPIO_Port, Start_Stop_LED_Pin, isMotorEnabled);
 1295              		.loc 1 158 3 is_stmt 1 view .LVU375
 1296 006c 2148     		ldr	r0, .L85+12
 1297              	.LVL93:
 158:Core/Src/main.c ****   HAL_GPIO_WritePin(Start_Stop_LED_GPIO_Port, Start_Stop_LED_Pin, isMotorEnabled);
 1298              		.loc 1 158 3 is_stmt 0 view .LVU376
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 40


 1299 006e FFF7FEFF 		bl	init
 1300              	.LVL94:
 159:Core/Src/main.c **** 
 1301              		.loc 1 159 3 is_stmt 1 view .LVU377
 1302 0072 214B     		ldr	r3, .L85+16
 1303 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1304 0076 4FF40061 		mov	r1, #2048
 1305 007a 2048     		ldr	r0, .L85+20
 1306 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1307              	.LVL95:
 161:Core/Src/main.c ****   MC_InitPWM();
 1308              		.loc 1 161 3 view .LVU378
 1309 0080 FFF7FEFF 		bl	MC_DisablePWM
 1310              	.LVL96:
 162:Core/Src/main.c ****   MC_SetDuty(0);
 1311              		.loc 1 162 3 view .LVU379
 1312 0084 FFF7FEFF 		bl	MC_InitPWM
 1313              	.LVL97:
 163:Core/Src/main.c ****   MC_LoadStep(1);
 1314              		.loc 1 163 3 view .LVU380
 1315 0088 0020     		movs	r0, #0
 1316 008a FFF7FEFF 		bl	MC_SetDuty
 1317              	.LVL98:
 164:Core/Src/main.c ****   MC_EnablePWM();
 1318              		.loc 1 164 3 view .LVU381
 1319 008e 0120     		movs	r0, #1
 1320 0090 FFF7FEFF 		bl	MC_LoadStep
 1321              	.LVL99:
 165:Core/Src/main.c **** 
 1322              		.loc 1 165 3 view .LVU382
 1323 0094 FFF7FEFF 		bl	MC_EnablePWM
 1324              	.LVL100:
 167:Core/Src/main.c ****   /* USER CODE END 2 */
 1325              		.loc 1 167 3 view .LVU383
 1326 0098 FFF7FEFF 		bl	MX_IWDG_Init
 1327              	.LVL101:
 1328 009c 0EE0     		b	.L81
 1329              	.LVL102:
 1330              	.L83:
 153:Core/Src/main.c ****     target_duty = targetDutyBackupValue;
 1331              		.loc 1 153 5 view .LVU384
 1332 009e 003D     		subs	r5, r5, #0
 153:Core/Src/main.c ****     target_duty = targetDutyBackupValue;
 1333              		.loc 1 153 5 is_stmt 0 view .LVU385
 1334 00a0 18BF     		it	ne
 1335 00a2 0125     		movne	r5, #1
 1336              	.LVL103:
 153:Core/Src/main.c ****     target_duty = targetDutyBackupValue;
 1337              		.loc 1 153 20 view .LVU386
 1338 00a4 144B     		ldr	r3, .L85+16
 1339              	.LVL104:
 153:Core/Src/main.c ****     target_duty = targetDutyBackupValue;
 1340              		.loc 1 153 20 view .LVU387
 1341 00a6 1D70     		strb	r5, [r3]
 154:Core/Src/main.c ****     duty = realDutyBackupValue;
 1342              		.loc 1 154 5 is_stmt 1 view .LVU388
 154:Core/Src/main.c ****     duty = realDutyBackupValue;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 41


 1343              		.loc 1 154 17 is_stmt 0 view .LVU389
 1344 00a8 154B     		ldr	r3, .L85+24
 1345 00aa 1E80     		strh	r6, [r3]	@ movhi
 155:Core/Src/main.c ****   }
 1346              		.loc 1 155 5 is_stmt 1 view .LVU390
 155:Core/Src/main.c ****   }
 1347              		.loc 1 155 10 is_stmt 0 view .LVU391
 1348 00ac 154B     		ldr	r3, .L85+28
 1349 00ae 1F80     		strh	r7, [r3]	@ movhi
 1350 00b0 DCE7     		b	.L78
 1351              	.LVL105:
 1352              	.L84:
 175:Core/Src/main.c **** 	  }
 1353              		.loc 1 175 5 is_stmt 1 view .LVU392
 1354 00b2 FFF7FEFF 		bl	Error_Handler
 1355              	.LVL106:
 1356              	.L80:
 182:Core/Src/main.c ****     /* USER CODE END WHILE */
 1357              		.loc 1 182 5 view .LVU393
 1358 00b6 0F48     		ldr	r0, .L85+12
 1359 00b8 FFF7FEFF 		bl	tick
 1360              	.LVL107:
 172:Core/Src/main.c ****   {
 1361              		.loc 1 172 9 view .LVU394
 1362              	.L81:
 172:Core/Src/main.c ****   {
 1363              		.loc 1 172 3 view .LVU395
 174:Core/Src/main.c **** 		  Error_Handler();
 1364              		.loc 1 174 5 view .LVU396
 174:Core/Src/main.c **** 		  Error_Handler();
 1365              		.loc 1 174 9 is_stmt 0 view .LVU397
 1366 00bc 1248     		ldr	r0, .L85+32
 1367 00be FFF7FEFF 		bl	HAL_IWDG_Refresh
 1368              	.LVL108:
 174:Core/Src/main.c **** 		  Error_Handler();
 1369              		.loc 1 174 8 discriminator 1 view .LVU398
 1370 00c2 0028     		cmp	r0, #0
 1371 00c4 F5D1     		bne	.L84
 178:Core/Src/main.c ****       isMotorEnabled = !isMotorEnabled;
 1372              		.loc 1 178 5 is_stmt 1 view .LVU399
 178:Core/Src/main.c ****       isMotorEnabled = !isMotorEnabled;
 1373              		.loc 1 178 8 is_stmt 0 view .LVU400
 1374 00c6 0B48     		ldr	r0, .L85+12
 1375 00c8 FFF7FEFF 		bl	isClicked
 1376              	.LVL109:
 178:Core/Src/main.c ****       isMotorEnabled = !isMotorEnabled;
 1377              		.loc 1 178 7 discriminator 1 view .LVU401
 1378 00cc 0028     		cmp	r0, #0
 1379 00ce F2D0     		beq	.L80
 179:Core/Src/main.c ****       HAL_GPIO_WritePin(Start_Stop_LED_GPIO_Port, Start_Stop_LED_Pin, isMotorEnabled);
 1380              		.loc 1 179 7 is_stmt 1 view .LVU402
 1381 00d0 094B     		ldr	r3, .L85+16
 1382 00d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1383 00d4 82F00102 		eor	r2, r2, #1
 179:Core/Src/main.c ****       HAL_GPIO_WritePin(Start_Stop_LED_GPIO_Port, Start_Stop_LED_Pin, isMotorEnabled);
 1384              		.loc 1 179 22 is_stmt 0 view .LVU403
 1385 00d8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 42


 180:Core/Src/main.c ****     }
 1386              		.loc 1 180 7 is_stmt 1 view .LVU404
 1387 00da 4FF40061 		mov	r1, #2048
 1388 00de 0748     		ldr	r0, .L85+20
 1389 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1390              	.LVL110:
 1391 00e4 E7E7     		b	.L80
 1392              	.L86:
 1393 00e6 00BF     		.align	2
 1394              	.L85:
 1395 00e8 00000000 		.word	hadc1
 1396 00ec 00000000 		.word	adc_value
 1397 00f0 00000000 		.word	hrtc
 1398 00f4 00000000 		.word	start_stop_btt
 1399 00f8 00000000 		.word	isMotorEnabled
 1400 00fc 000C0140 		.word	1073810432
 1401 0100 00000000 		.word	target_duty
 1402 0104 00000000 		.word	duty
 1403 0108 00000000 		.word	hiwdg
 1404              		.cfi_endproc
 1405              	.LFE68:
 1407              		.global	start_stop_btt
 1408              		.section	.data.start_stop_btt,"aw"
 1409              		.align	2
 1412              	start_stop_btt:
 1413 0000 000C0140 		.word	1073810432
 1414 0004 0004     		.short	1024
 1415 0006 01       		.byte	1
 1416 0007 00000000 		.space	13
 1416      00000000 
 1416      00000000 
 1416      00
 1417              		.global	isMotorEnabled
 1418              		.section	.bss.isMotorEnabled,"aw",%nobits
 1421              	isMotorEnabled:
 1422 0000 00       		.space	1
 1423              		.global	isScreenConnected
 1424              		.section	.bss.isScreenConnected,"aw",%nobits
 1427              	isScreenConnected:
 1428 0000 00       		.space	1
 1429              		.global	current
 1430              		.section	.bss.current,"aw",%nobits
 1431              		.align	2
 1434              	current:
 1435 0000 00000000 		.space	4
 1436              		.global	target_duty
 1437              		.section	.bss.target_duty,"aw",%nobits
 1438              		.align	1
 1441              	target_duty:
 1442 0000 0000     		.space	2
 1443              		.global	adc_value
 1444              		.section	.bss.adc_value,"aw",%nobits
 1445              		.align	1
 1448              	adc_value:
 1449 0000 0000     		.space	2
 1450              		.global	stop_sequence_ctrl
 1451              		.section	.bss.stop_sequence_ctrl,"aw",%nobits
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 43


 1454              	stop_sequence_ctrl:
 1455 0000 00       		.space	1
 1456              		.global	stop_sequence
 1457              		.section	.bss.stop_sequence,"aw",%nobits
 1460              	stop_sequence:
 1461 0000 00       		.space	1
 1462              		.global	startup_sequence
 1463              		.section	.data.startup_sequence,"aw"
 1466              	startup_sequence:
 1467 0000 01       		.byte	1
 1468              		.global	gase_max_pos
 1469              		.section	.data.gase_max_pos,"aw"
 1470              		.align	2
 1473              	gase_max_pos:
 1474 0000 EA0B0000 		.word	3050
 1475              		.global	gase_zero_pos
 1476              		.section	.data.gase_zero_pos,"aw"
 1477              		.align	2
 1480              	gase_zero_pos:
 1481 0000 B0040000 		.word	1200
 1482              		.global	pulse_interval_data
 1483              		.section	.bss.pulse_interval_data,"aw",%nobits
 1484              		.align	2
 1487              	pulse_interval_data:
 1488 0000 00000000 		.space	4
 1489              		.global	pulse_interval_us
 1490              		.section	.data.pulse_interval_us,"aw"
 1491              		.align	2
 1494              	pulse_interval_us:
 1495 0000 FFFFFFFF 		.word	-1
 1496              		.global	hall_value
 1497              		.section	.bss.hall_value,"aw",%nobits
 1500              	hall_value:
 1501 0000 00       		.space	1
 1502              		.global	duty_dt
 1503              		.section	.bss.duty_dt,"aw",%nobits
 1504              		.align	1
 1507              	duty_dt:
 1508 0000 0000     		.space	2
 1509              		.global	duty
 1510              		.section	.bss.duty,"aw",%nobits
 1511              		.align	1
 1514              	duty:
 1515 0000 0000     		.space	2
 1516              		.global	htim1
 1517              		.section	.bss.htim1,"aw",%nobits
 1518              		.align	2
 1521              	htim1:
 1522 0000 00000000 		.space	72
 1522      00000000 
 1522      00000000 
 1522      00000000 
 1522      00000000 
 1523              		.global	hrtc
 1524              		.section	.bss.hrtc,"aw",%nobits
 1525              		.align	2
 1528              	hrtc:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 44


 1529 0000 00000000 		.space	20
 1529      00000000 
 1529      00000000 
 1529      00000000 
 1529      00000000 
 1530              		.global	hiwdg
 1531              		.section	.bss.hiwdg,"aw",%nobits
 1532              		.align	2
 1535              	hiwdg:
 1536 0000 00000000 		.space	12
 1536      00000000 
 1536      00000000 
 1537              		.global	hdma_adc1
 1538              		.section	.bss.hdma_adc1,"aw",%nobits
 1539              		.align	2
 1542              	hdma_adc1:
 1543 0000 00000000 		.space	68
 1543      00000000 
 1543      00000000 
 1543      00000000 
 1543      00000000 
 1544              		.global	hadc1
 1545              		.section	.bss.hadc1,"aw",%nobits
 1546              		.align	2
 1549              	hadc1:
 1550 0000 00000000 		.space	48
 1550      00000000 
 1550      00000000 
 1550      00000000 
 1550      00000000 
 1551              		.text
 1552              	.Letext0:
 1553              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1554              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 1555              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
 1556              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1557              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1558              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1559              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1560              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1561              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1562              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1563              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 1564              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 1565              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1566              		.file 16 "Core/Inc/buttons.h"
 1567              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h"
 1568              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc_ex.h"
 1569              		.file 19 "Core/Inc/main.h"
 1570              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1571              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1572              		.file 22 "Core/Inc/six_step.h"
 1573              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 1574              		.file 24 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1575              		.file 25 "<built-in>"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:185    .text.MX_GPIO_Init:000000c4 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:192    .text.MX_DMA_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:197    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:242    .text.MX_DMA_Init:00000030 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:247    .text.map:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:253    .text.map:00000000 map
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:283    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:289    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:554    .text.HAL_TIM_PeriodElapsedCallback:00000144 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1500   .bss.hall_value:00000000 hall_value
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1448   .bss.adc_value:00000000 adc_value
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1549   .bss.hadc1:00000000 hadc1
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1480   .data.gase_zero_pos:00000000 gase_zero_pos
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1473   .data.gase_max_pos:00000000 gase_max_pos
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1441   .bss.target_duty:00000000 target_duty
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1421   .bss.isMotorEnabled:00000000 isMotorEnabled
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1507   .bss.duty_dt:00000000 duty_dt
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1514   .bss.duty:00000000 duty
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1528   .bss.hrtc:00000000 hrtc
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:571    .text.Error_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:577    .text.Error_Handler:00000000 Error_Handler
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:609    .text.MX_ADC1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:614    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:699    .text.MX_ADC1_Init:0000004c $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:705    .text.MX_TIM1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:710    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:943    .text.MX_TIM1_Init:000000f4 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1521   .bss.htim1:00000000 htim1
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:949    .text.MX_RTC_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:954    .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:992    .text.MX_RTC_Init:00000020 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:998    .text.MX_IWDG_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1003   .text.MX_IWDG_Init:00000000 MX_IWDG_Init
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1041   .text.MX_IWDG_Init:0000001c $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1535   .bss.hiwdg:00000000 hiwdg
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1047   .text.SystemClock_Config:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1053   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1192   .text.main:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1198   .text.main:00000000 main
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1395   .text.main:000000e8 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1412   .data.start_stop_btt:00000000 start_stop_btt
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1409   .data.start_stop_btt:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1422   .bss.isMotorEnabled:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1427   .bss.isScreenConnected:00000000 isScreenConnected
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1428   .bss.isScreenConnected:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1434   .bss.current:00000000 current
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1431   .bss.current:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1438   .bss.target_duty:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1445   .bss.adc_value:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1454   .bss.stop_sequence_ctrl:00000000 stop_sequence_ctrl
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1455   .bss.stop_sequence_ctrl:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1460   .bss.stop_sequence:00000000 stop_sequence
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1461   .bss.stop_sequence:00000000 $d
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 46


C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1466   .data.startup_sequence:00000000 startup_sequence
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1470   .data.gase_max_pos:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1477   .data.gase_zero_pos:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1487   .bss.pulse_interval_data:00000000 pulse_interval_data
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1484   .bss.pulse_interval_data:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1494   .data.pulse_interval_us:00000000 pulse_interval_us
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1491   .data.pulse_interval_us:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1501   .bss.hall_value:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1504   .bss.duty_dt:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1511   .bss.duty:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1518   .bss.htim1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1525   .bss.hrtc:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1532   .bss.hiwdg:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1542   .bss.hdma_adc1:00000000 hdma_adc1
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1539   .bss.hdma_adc1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s:1546   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_ReadPin
HAL_ADC_Start_DMA
__aeabi_i2d
__aeabi_dcmple
MC_SetDuty
HAL_GPIO_TogglePin
HAL_PWR_EnableBkUpAccess
HAL_RTCEx_BKUPWrite
HAL_PWR_DisableBkUpAccess
MC_LoadStep
HAL_ADC_Init
HAL_ADC_ConfigChannel
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RTC_Init
HAL_IWDG_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_EnableCSS
HAL_Init
HAL_ADC_Stop
HAL_ADCEx_Calibration_Start
HAL_RTCEx_BKUPRead
init
MC_DisablePWM
MC_InitPWM
MC_EnablePWM
tick
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4sVFOU.s 			page 47


HAL_IWDG_Refresh
isClicked
