ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB74:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "stdbool.h"
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "stdlib.h"
  27:Core/Src/main.c **** #include "math.h"
  28:Core/Src/main.c **** #include "six_step.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** #define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** #define SHUTDOWN_DUTY 115
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** uint16_t duty;
  58:Core/Src/main.c **** uint16_t duty_dt;
  59:Core/Src/main.c **** uint8_t hall_value; // newer version of bool halls[3]
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** uint32_t pulse_interval_us = 0xFFFFFFFF;
  62:Core/Src/main.c **** uint32_t pulse_interval_data;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** uint32_t gase_zero_pos = 1200;
  65:Core/Src/main.c **** uint32_t gase_max_pos = 3050;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** bool startup_sequence = true;// set true 
  68:Core/Src/main.c **** bool stop_sequence = false;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** bool stop_sequence_ctrl = false;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** uint16_t adc_value;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** #define MAX_DUTY_DELTA     8   // maximum change per 10ms
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** uint16_t target_duty = 0;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** float current = 0.0f;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** bool isScreenConnected = false;
  81:Core/Src/main.c **** /* USER CODE END PV */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  84:Core/Src/main.c **** void SystemClock_Config(void);
  85:Core/Src/main.c **** static void MX_GPIO_Init(void);
  86:Core/Src/main.c **** static void MX_DMA_Init(void);
  87:Core/Src/main.c **** static void MX_ADC1_Init(void);
  88:Core/Src/main.c **** static void MX_TIM1_Init(void);
  89:Core/Src/main.c **** static void MX_IWDG_Init(void);
  90:Core/Src/main.c **** /* USER CODE BEGIN PFP */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END PFP */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  95:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* USER CODE END 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /**
 100:Core/Src/main.c ****   * @brief  The application entry point.
 101:Core/Src/main.c ****   * @retval int
 102:Core/Src/main.c ****   */
 103:Core/Src/main.c **** int main(void)
 104:Core/Src/main.c **** {
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 1 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 113:Core/Src/main.c ****   HAL_Init();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END Init */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Configure the system clock */
 120:Core/Src/main.c ****   SystemClock_Config();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END SysInit */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Initialize all configured peripherals */
 127:Core/Src/main.c ****   MX_GPIO_Init();
 128:Core/Src/main.c ****   MX_DMA_Init();
 129:Core/Src/main.c ****   MX_ADC1_Init();
 130:Core/Src/main.c ****   MX_TIM1_Init();
 131:Core/Src/main.c ****   MX_IWDG_Init();
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 133:Core/Src/main.c ****   HAL_ADC_Stop(&hadc1);
 134:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_value, 1);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   MC_DisablePWM();
 139:Core/Src/main.c ****   MC_InitPWM();
 140:Core/Src/main.c ****   MC_SetDuty(0);
 141:Core/Src/main.c ****   MC_LoadStep(1);
 142:Core/Src/main.c ****   MC_EnablePWM();
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   MX_IWDG_Init();
 145:Core/Src/main.c ****   /* USER CODE END 2 */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 4


 148:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 149:Core/Src/main.c ****   while (1)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     if (HAL_IWDG_Refresh(&hiwdg) != HAL_OK){
 152:Core/Src/main.c **** 		  Error_Handler();
 153:Core/Src/main.c **** 	  }
 154:Core/Src/main.c ****     /* USER CODE END WHILE */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c ****   /* USER CODE END 3 */
 159:Core/Src/main.c **** }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief System Clock Configuration
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** void SystemClock_Config(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 168:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 169:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 172:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 201:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 202:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 5


 205:Core/Src/main.c ****   }
 206:Core/Src/main.c **** }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /**
 209:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 210:Core/Src/main.c ****   * @param None
 211:Core/Src/main.c ****   * @retval None
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c **** static void MX_ADC1_Init(void)
 214:Core/Src/main.c **** {
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /** Common config
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c ****   hadc1.Instance = ADC1;
 229:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 230:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 231:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 232:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 233:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 234:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 235:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /** Configure Regular Channel
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 243:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 244:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 245:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 246:Core/Src/main.c ****   {
 247:Core/Src/main.c ****     Error_Handler();
 248:Core/Src/main.c ****   }
 249:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** }
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /**
 256:Core/Src/main.c ****   * @brief IWDG Initialization Function
 257:Core/Src/main.c ****   * @param None
 258:Core/Src/main.c ****   * @retval None
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c **** static void MX_IWDG_Init(void)
 261:Core/Src/main.c **** {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 270:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 271:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 272:Core/Src/main.c ****   hiwdg.Init.Reload = 80;
 273:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /**
 284:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 285:Core/Src/main.c ****   * @param None
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** static void MX_TIM1_Init(void)
 289:Core/Src/main.c **** {
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 296:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 297:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 298:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 303:Core/Src/main.c ****   htim1.Instance = TIM1;
 304:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 305:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 306:Core/Src/main.c ****   htim1.Init.Period = 2399;
 307:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 308:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 309:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 310:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 315:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 316:Core/Src/main.c ****   {
 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 7


 319:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 324:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 325:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 330:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 331:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 332:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 333:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 334:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 335:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 336:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     Error_Handler();
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****     Error_Handler();
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 355:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 356:Core/Src/main.c ****   {
 357:Core/Src/main.c ****     Error_Handler();
 358:Core/Src/main.c ****   }
 359:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 362:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** }
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** /**
 367:Core/Src/main.c ****   * Enable DMA controller clock
 368:Core/Src/main.c ****   */
 369:Core/Src/main.c **** static void MX_DMA_Init(void)
 370:Core/Src/main.c **** {
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* DMA controller clock enable */
 373:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* DMA interrupt init */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 8


 376:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 377:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 378:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief GPIO Initialization Function
 384:Core/Src/main.c ****   * @param None
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** static void MX_GPIO_Init(void)
 388:Core/Src/main.c **** {
  26              		.loc 1 388 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              		.cfi_def_cfa_offset 56
 389:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 389 3 view .LVU1
  40              		.loc 1 389 20 is_stmt 0 view .LVU2
  41 0004 04AD     		add	r5, sp, #16
  42 0006 0024     		movs	r4, #0
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 390:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 395:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 395 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 395 3 view .LVU4
  50              		.loc 1 395 3 view .LVU5
  51 0010 214B     		ldr	r3, .L3
  52 0012 9A69     		ldr	r2, [r3, #24]
  53 0014 42F01002 		orr	r2, r2, #16
  54 0018 9A61     		str	r2, [r3, #24]
  55              		.loc 1 395 3 view .LVU6
  56 001a 9A69     		ldr	r2, [r3, #24]
  57 001c 02F01002 		and	r2, r2, #16
  58 0020 0092     		str	r2, [sp]
  59              		.loc 1 395 3 view .LVU7
  60 0022 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 395 3 view .LVU8
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 9


 396:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  63              		.loc 1 396 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 396 3 view .LVU10
  66              		.loc 1 396 3 view .LVU11
  67 0024 9A69     		ldr	r2, [r3, #24]
  68 0026 42F02002 		orr	r2, r2, #32
  69 002a 9A61     		str	r2, [r3, #24]
  70              		.loc 1 396 3 view .LVU12
  71 002c 9A69     		ldr	r2, [r3, #24]
  72 002e 02F02002 		and	r2, r2, #32
  73 0032 0192     		str	r2, [sp, #4]
  74              		.loc 1 396 3 view .LVU13
  75 0034 019A     		ldr	r2, [sp, #4]
  76              	.LBE5:
  77              		.loc 1 396 3 view .LVU14
 397:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 397 3 view .LVU15
  79              	.LBB6:
  80              		.loc 1 397 3 view .LVU16
  81              		.loc 1 397 3 view .LVU17
  82 0036 9A69     		ldr	r2, [r3, #24]
  83 0038 42F00402 		orr	r2, r2, #4
  84 003c 9A61     		str	r2, [r3, #24]
  85              		.loc 1 397 3 view .LVU18
  86 003e 9A69     		ldr	r2, [r3, #24]
  87 0040 02F00402 		and	r2, r2, #4
  88 0044 0292     		str	r2, [sp, #8]
  89              		.loc 1 397 3 view .LVU19
  90 0046 029A     		ldr	r2, [sp, #8]
  91              	.LBE6:
  92              		.loc 1 397 3 view .LVU20
 398:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 398 3 view .LVU21
  94              	.LBB7:
  95              		.loc 1 398 3 view .LVU22
  96              		.loc 1 398 3 view .LVU23
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 398 3 view .LVU24
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 398 3 view .LVU25
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE7:
 107              		.loc 1 398 3 view .LVU26
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 401:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin|PH1L_Pin|PH2L_Pin|PH3L_Pin, GPIO_PIN_RESET);
 108              		.loc 1 401 3 view .LVU27
 109 005a 104F     		ldr	r7, .L3+4
 110 005c 2246     		mov	r2, r4
 111 005e 4FF40E51 		mov	r1, #9088
 112 0062 3846     		mov	r0, r7
 113 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 10


 114              	.LVL0:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin PH1L_Pin PH2L_Pin PH3L_Pin */
 404:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin|PH1L_Pin|PH2L_Pin|PH3L_Pin;
 115              		.loc 1 404 3 view .LVU28
 116              		.loc 1 404 23 is_stmt 0 view .LVU29
 117 0068 4FF40E53 		mov	r3, #9088
 118 006c 0493     		str	r3, [sp, #16]
 405:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 405 3 is_stmt 1 view .LVU30
 120              		.loc 1 405 24 is_stmt 0 view .LVU31
 121 006e 0126     		movs	r6, #1
 122 0070 0596     		str	r6, [sp, #20]
 406:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 406 3 is_stmt 1 view .LVU32
 124              		.loc 1 406 24 is_stmt 0 view .LVU33
 125 0072 0694     		str	r4, [sp, #24]
 407:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 126              		.loc 1 407 3 is_stmt 1 view .LVU34
 127              		.loc 1 407 25 is_stmt 0 view .LVU35
 128 0074 0223     		movs	r3, #2
 129 0076 0793     		str	r3, [sp, #28]
 408:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 130              		.loc 1 408 3 is_stmt 1 view .LVU36
 131 0078 2946     		mov	r1, r5
 132 007a 3846     		mov	r0, r7
 133 007c FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL1:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /*Configure GPIO pins : H1_Pin H2_Pin H3_Pin */
 411:Core/Src/main.c ****   GPIO_InitStruct.Pin = H1_Pin|H2_Pin|H3_Pin;
 135              		.loc 1 411 3 view .LVU37
 136              		.loc 1 411 23 is_stmt 0 view .LVU38
 137 0080 4FF46043 		mov	r3, #57344
 138 0084 0493     		str	r3, [sp, #16]
 412:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 139              		.loc 1 412 3 is_stmt 1 view .LVU39
 140              		.loc 1 412 24 is_stmt 0 view .LVU40
 141 0086 0594     		str	r4, [sp, #20]
 413:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 142              		.loc 1 413 3 is_stmt 1 view .LVU41
 143              		.loc 1 413 24 is_stmt 0 view .LVU42
 144 0088 0696     		str	r6, [sp, #24]
 414:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 145              		.loc 1 414 3 is_stmt 1 view .LVU43
 146 008a 2946     		mov	r1, r5
 147 008c 0448     		ldr	r0, .L3+8
 148 008e FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 419:Core/Src/main.c **** }
 150              		.loc 1 419 1 is_stmt 0 view .LVU44
 151 0092 09B0     		add	sp, sp, #36
 152              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 11


 153              		@ sp needed
 154 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 155              	.L4:
 156 0096 00BF     		.align	2
 157              	.L3:
 158 0098 00100240 		.word	1073876992
 159 009c 00100140 		.word	1073811456
 160 00a0 000C0140 		.word	1073810432
 161              		.cfi_endproc
 162              	.LFE74:
 164              		.section	.text.MX_DMA_Init,"ax",%progbits
 165              		.align	1
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	MX_DMA_Init:
 171              	.LFB73:
 370:Core/Src/main.c **** 
 172              		.loc 1 370 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 00B5     		push	{lr}
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 14, -4
 179 0002 83B0     		sub	sp, sp, #12
 180              		.cfi_def_cfa_offset 16
 373:Core/Src/main.c **** 
 181              		.loc 1 373 3 view .LVU46
 182              	.LBB8:
 373:Core/Src/main.c **** 
 183              		.loc 1 373 3 view .LVU47
 373:Core/Src/main.c **** 
 184              		.loc 1 373 3 view .LVU48
 185 0004 0A4B     		ldr	r3, .L7
 186 0006 5A69     		ldr	r2, [r3, #20]
 187 0008 42F00102 		orr	r2, r2, #1
 188 000c 5A61     		str	r2, [r3, #20]
 373:Core/Src/main.c **** 
 189              		.loc 1 373 3 view .LVU49
 190 000e 5B69     		ldr	r3, [r3, #20]
 191 0010 03F00103 		and	r3, r3, #1
 192 0014 0193     		str	r3, [sp, #4]
 373:Core/Src/main.c **** 
 193              		.loc 1 373 3 view .LVU50
 194 0016 019B     		ldr	r3, [sp, #4]
 195              	.LBE8:
 373:Core/Src/main.c **** 
 196              		.loc 1 373 3 view .LVU51
 377:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 197              		.loc 1 377 3 view .LVU52
 198 0018 0022     		movs	r2, #0
 199 001a 1146     		mov	r1, r2
 200 001c 0B20     		movs	r0, #11
 201 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 202              	.LVL3:
 378:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 12


 203              		.loc 1 378 3 view .LVU53
 204 0022 0B20     		movs	r0, #11
 205 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 206              	.LVL4:
 380:Core/Src/main.c **** 
 207              		.loc 1 380 1 is_stmt 0 view .LVU54
 208 0028 03B0     		add	sp, sp, #12
 209              		.cfi_def_cfa_offset 4
 210              		@ sp needed
 211 002a 5DF804FB 		ldr	pc, [sp], #4
 212              	.L8:
 213 002e 00BF     		.align	2
 214              	.L7:
 215 0030 00100240 		.word	1073876992
 216              		.cfi_endproc
 217              	.LFE73:
 219              		.section	.text.map,"ax",%progbits
 220              		.align	1
 221              		.global	map
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	map:
 227              	.LVL5:
 228              	.LFB75:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 422:Core/Src/main.c **** uint32_t map(uint32_t x, uint32_t in_min, uint32_t in_max, uint32_t out_min, uint32_t out_max) {
 229              		.loc 1 422 96 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 4, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 423:Core/Src/main.c ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 234              		.loc 1 423 3 view .LVU56
 235              		.loc 1 423 13 is_stmt 0 view .LVU57
 236 0000 A0EB010C 		sub	ip, r0, r1
 237              		.loc 1 423 34 view .LVU58
 238 0004 0098     		ldr	r0, [sp]
 239              	.LVL6:
 240              		.loc 1 423 34 view .LVU59
 241 0006 C01A     		subs	r0, r0, r3
 242              		.loc 1 423 23 view .LVU60
 243 0008 00FB0CFC 		mul	ip, r0, ip
 244              		.loc 1 423 55 view .LVU61
 245 000c 521A     		subs	r2, r2, r1
 246              	.LVL7:
 247              		.loc 1 423 45 view .LVU62
 248 000e BCFBF2FC 		udiv	ip, ip, r2
 424:Core/Src/main.c **** }
 249              		.loc 1 424 1 view .LVU63
 250 0012 0CEB0300 		add	r0, ip, r3
 251 0016 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE75:
 255              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 256              		.align	1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 13


 257              		.global	HAL_TIM_PeriodElapsedCallback
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	HAL_TIM_PeriodElapsedCallback:
 263              	.LVL8:
 264              	.LFB76:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 265              		.loc 1 426 60 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 426 60 is_stmt 0 view .LVU65
 270 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 271              		.cfi_def_cfa_offset 24
 272              		.cfi_offset 4, -24
 273              		.cfi_offset 5, -20
 274              		.cfi_offset 6, -16
 275              		.cfi_offset 7, -12
 276              		.cfi_offset 8, -8
 277              		.cfi_offset 14, -4
 278 0004 82B0     		sub	sp, sp, #8
 279              		.cfi_def_cfa_offset 32
 427:Core/Src/main.c ****   // Get hall values
 428:Core/Src/main.c ****   uint8_t old_halls = hall_value;
 280              		.loc 1 428 3 is_stmt 1 view .LVU66
 281              		.loc 1 428 11 is_stmt 0 view .LVU67
 282 0006 3D4F     		ldr	r7, .L24
 283 0008 3D78     		ldrb	r5, [r7]	@ zero_extendqisi2
 284              	.LVL9:
 429:Core/Src/main.c ****   uint8_t hall_a = (HAL_GPIO_ReadPin(H1_GPIO_Port, H1_Pin) == GPIO_PIN_SET) ? 1 : 0;
 285              		.loc 1 429 3 is_stmt 1 view .LVU68
 286              		.loc 1 429 21 is_stmt 0 view .LVU69
 287 000a DFF8F480 		ldr	r8, .L24+4
 288 000e 4FF40051 		mov	r1, #8192
 289 0012 4046     		mov	r0, r8
 290              	.LVL10:
 291              		.loc 1 429 21 view .LVU70
 292 0014 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 293              	.LVL11:
 294              		.loc 1 429 81 discriminator 1 view .LVU71
 295 0018 0128     		cmp	r0, #1
 296 001a 14BF     		ite	ne
 297 001c 0026     		movne	r6, #0
 298 001e 0126     		moveq	r6, #1
 299              	.LVL12:
 430:Core/Src/main.c ****   uint8_t hall_b = (HAL_GPIO_ReadPin(H2_GPIO_Port, H2_Pin) == GPIO_PIN_SET) ? 1 : 0;
 300              		.loc 1 430 3 is_stmt 1 view .LVU72
 301              		.loc 1 430 21 is_stmt 0 view .LVU73
 302 0020 4FF48041 		mov	r1, #16384
 303 0024 4046     		mov	r0, r8
 304 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 305              	.LVL13:
 306              		.loc 1 430 81 discriminator 1 view .LVU74
 307 002a 0128     		cmp	r0, #1
 308 002c 14BF     		ite	ne
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 14


 309 002e 0024     		movne	r4, #0
 310 0030 0124     		moveq	r4, #1
 311              	.LVL14:
 431:Core/Src/main.c ****   uint8_t hall_c = (HAL_GPIO_ReadPin(H3_GPIO_Port, H3_Pin) == GPIO_PIN_SET) ? 1 : 0;
 312              		.loc 1 431 3 is_stmt 1 view .LVU75
 313              		.loc 1 431 21 is_stmt 0 view .LVU76
 314 0032 4FF40041 		mov	r1, #32768
 315 0036 4046     		mov	r0, r8
 316 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 317              	.LVL15:
 318              		.loc 1 431 81 discriminator 1 view .LVU77
 319 003c 0128     		cmp	r0, #1
 320 003e 14BF     		ite	ne
 321 0040 0023     		movne	r3, #0
 322 0042 0123     		moveq	r3, #1
 323              	.LVL16:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   hall_value = (hall_c << 2) | (hall_b << 1) | hall_a;
 324              		.loc 1 433 3 is_stmt 1 view .LVU78
 325              		.loc 1 433 30 is_stmt 0 view .LVU79
 326 0044 6000     		lsls	r0, r4, #1
 327 0046 40EA8300 		orr	r0, r0, r3, lsl #2
 328              		.loc 1 433 46 view .LVU80
 329 004a 3043     		orrs	r0, r0, r6
 330              		.loc 1 433 14 view .LVU81
 331 004c 3870     		strb	r0, [r7]
 434:Core/Src/main.c ****  
 435:Core/Src/main.c ****   // Get gase value and update current
 436:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_value, 1);
 332              		.loc 1 436 3 is_stmt 1 view .LVU82
 333 004e 2D4C     		ldr	r4, .L24+8
 334              	.LVL17:
 335              		.loc 1 436 3 is_stmt 0 view .LVU83
 336 0050 0122     		movs	r2, #1
 337 0052 2146     		mov	r1, r4
 338 0054 2C48     		ldr	r0, .L24+12
 339 0056 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 340              	.LVL18:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   uint16_t gase_value = constrain(adc_value, gase_zero_pos, gase_max_pos);
 341              		.loc 1 438 3 is_stmt 1 view .LVU84
 342              		.loc 1 438 25 is_stmt 0 view .LVU85
 343 005a 2088     		ldrh	r0, [r4]
 344 005c 2B4B     		ldr	r3, .L24+16
 345 005e 1968     		ldr	r1, [r3]
 346              		.loc 1 438 12 view .LVU86
 347 0060 8842     		cmp	r0, r1
 348 0062 3BD3     		bcc	.L11
 349              		.loc 1 438 25 discriminator 1 view .LVU87
 350 0064 2A4B     		ldr	r3, .L24+20
 351 0066 1B68     		ldr	r3, [r3]
 352 0068 9842     		cmp	r0, r3
 353 006a 28BF     		it	cs
 354 006c 1846     		movcs	r0, r3
 355              		.loc 1 438 12 discriminator 1 view .LVU88
 356 006e 80B2     		uxth	r0, r0
 357              	.L12:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 15


 358              	.LVL19:
 439:Core/Src/main.c ****   target_duty = map(gase_value, gase_zero_pos, gase_max_pos, 0, 2399);  
 359              		.loc 1 439 3 is_stmt 1 view .LVU89
 360              		.loc 1 439 17 is_stmt 0 view .LVU90
 361 0070 40F65F13 		movw	r3, #2399
 362 0074 0093     		str	r3, [sp]
 363 0076 0023     		movs	r3, #0
 364 0078 254A     		ldr	r2, .L24+20
 365 007a 1268     		ldr	r2, [r2]
 366 007c FFF7FEFF 		bl	map
 367              	.LVL20:
 368              		.loc 1 439 15 discriminator 1 view .LVU91
 369 0080 84B2     		uxth	r4, r0
 370 0082 244B     		ldr	r3, .L24+24
 371 0084 1C80     		strh	r4, [r3]	@ movhi
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   duty_dt++;
 372              		.loc 1 441 3 is_stmt 1 view .LVU92
 373              		.loc 1 441 10 is_stmt 0 view .LVU93
 374 0086 244A     		ldr	r2, .L24+28
 375 0088 1388     		ldrh	r3, [r2]
 376 008a 0133     		adds	r3, r3, #1
 377 008c 9BB2     		uxth	r3, r3
 378 008e 1380     		strh	r3, [r2]	@ movhi
 442:Core/Src/main.c ****   if(duty_dt >= 319){
 379              		.loc 1 442 3 is_stmt 1 view .LVU94
 380              		.loc 1 442 5 is_stmt 0 view .LVU95
 381 0090 B3F59F7F 		cmp	r3, #318
 382 0094 16D9     		bls	.L13
 383              	.LBB9:
 443:Core/Src/main.c ****     duty_dt = 0;
 384              		.loc 1 443 5 is_stmt 1 view .LVU96
 385              		.loc 1 443 13 is_stmt 0 view .LVU97
 386 0096 1346     		mov	r3, r2
 387 0098 0022     		movs	r2, #0
 388 009a 1A80     		strh	r2, [r3]	@ movhi
 444:Core/Src/main.c ****     int16_t diff = target_duty - duty;
 389              		.loc 1 444 5 is_stmt 1 view .LVU98
 390              		.loc 1 444 32 is_stmt 0 view .LVU99
 391 009c 1F4B     		ldr	r3, .L24+32
 392 009e 1F88     		ldrh	r7, [r3]
 393 00a0 E61B     		subs	r6, r4, r7
 394              	.LVL21:
 395              		.loc 1 444 13 view .LVU100
 396 00a2 36B2     		sxth	r6, r6
 397              	.LVL22:
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****     if (fabs(diff) <= MAX_DUTY_DELTA){
 398              		.loc 1 446 5 is_stmt 1 view .LVU101
 399              		.loc 1 446 9 is_stmt 0 view .LVU102
 400 00a4 3046     		mov	r0, r6
 401 00a6 FFF7FEFF 		bl	__aeabi_i2d
 402              	.LVL23:
 403 00aa 21F00041 		bic	r1, r1, #-2147483648
 404              		.loc 1 446 8 view .LVU103
 405 00ae 0022     		movs	r2, #0
 406 00b0 1B4B     		ldr	r3, .L24+36
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 16


 407 00b2 FFF7FEFF 		bl	__aeabi_dcmple
 408              	.LVL24:
 409 00b6 98B1     		cbz	r0, .L21
 447:Core/Src/main.c ****       duty = target_duty;
 410              		.loc 1 447 7 is_stmt 1 view .LVU104
 411              		.loc 1 447 12 is_stmt 0 view .LVU105
 412 00b8 184B     		ldr	r3, .L24+32
 413 00ba 1C80     		strh	r4, [r3]	@ movhi
 414              	.L16:
 448:Core/Src/main.c ****     }else{
 449:Core/Src/main.c ****       duty += (diff > 0 ? MAX_DUTY_DELTA : -MAX_DUTY_DELTA);
 450:Core/Src/main.c ****     }
 451:Core/Src/main.c ****     MC_SetDuty(duty);
 415              		.loc 1 451 5 is_stmt 1 view .LVU106
 416 00bc 174B     		ldr	r3, .L24+32
 417 00be 1888     		ldrh	r0, [r3]
 418 00c0 FFF7FEFF 		bl	MC_SetDuty
 419              	.LVL25:
 420              	.L13:
 421              		.loc 1 451 5 is_stmt 0 view .LVU107
 422              	.LBE9:
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   // Apply 
 454:Core/Src/main.c ****   if(old_halls != hall_value){
 423              		.loc 1 454 3 is_stmt 1 view .LVU108
 424              		.loc 1 454 16 is_stmt 0 view .LVU109
 425 00c4 0D4B     		ldr	r3, .L24
 426 00c6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 427              		.loc 1 454 5 view .LVU110
 428 00c8 A842     		cmp	r0, r5
 429 00ca 13D1     		bne	.L23
 430              	.L18:
 455:Core/Src/main.c ****     MC_LoadStep(hall_value);
 456:Core/Src/main.c ****   }
 457:Core/Src/main.c ****   HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 431              		.loc 1 457 3 is_stmt 1 view .LVU111
 432 00cc 4FF40051 		mov	r1, #8192
 433 00d0 1448     		ldr	r0, .L24+40
 434 00d2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 435              	.LVL26:
 458:Core/Src/main.c **** }
 436              		.loc 1 458 1 is_stmt 0 view .LVU112
 437 00d6 02B0     		add	sp, sp, #8
 438              		.cfi_remember_state
 439              		.cfi_def_cfa_offset 24
 440              		@ sp needed
 441 00d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 442              	.LVL27:
 443              	.L11:
 444              		.cfi_restore_state
 438:Core/Src/main.c ****   target_duty = map(gase_value, gase_zero_pos, gase_max_pos, 0, 2399);  
 445              		.loc 1 438 12 discriminator 2 view .LVU113
 446 00dc 88B2     		uxth	r0, r1
 447 00de C7E7     		b	.L12
 448              	.LVL28:
 449              	.L21:
 450              	.LBB10:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 17


 449:Core/Src/main.c ****     }
 451              		.loc 1 449 7 is_stmt 1 view .LVU114
 449:Core/Src/main.c ****     }
 452              		.loc 1 449 12 is_stmt 0 view .LVU115
 453 00e0 002E     		cmp	r6, #0
 454 00e2 04DD     		ble	.L19
 449:Core/Src/main.c ****     }
 455              		.loc 1 449 12 discriminator 1 view .LVU116
 456 00e4 0823     		movs	r3, #8
 457              	.L17:
 449:Core/Src/main.c ****     }
 458              		.loc 1 449 12 discriminator 4 view .LVU117
 459 00e6 1F44     		add	r7, r7, r3
 460 00e8 0C4B     		ldr	r3, .L24+32
 461 00ea 1F80     		strh	r7, [r3]	@ movhi
 462 00ec E6E7     		b	.L16
 463              	.L19:
 449:Core/Src/main.c ****     }
 464              		.loc 1 449 12 discriminator 2 view .LVU118
 465 00ee 4FF6F873 		movw	r3, #65528
 466 00f2 F8E7     		b	.L17
 467              	.LVL29:
 468              	.L23:
 449:Core/Src/main.c ****     }
 469              		.loc 1 449 12 discriminator 2 view .LVU119
 470              	.LBE10:
 455:Core/Src/main.c ****   }
 471              		.loc 1 455 5 is_stmt 1 view .LVU120
 472 00f4 FFF7FEFF 		bl	MC_LoadStep
 473              	.LVL30:
 474 00f8 E8E7     		b	.L18
 475              	.L25:
 476 00fa 00BF     		.align	2
 477              	.L24:
 478 00fc 00000000 		.word	hall_value
 479 0100 000C0140 		.word	1073810432
 480 0104 00000000 		.word	adc_value
 481 0108 00000000 		.word	hadc1
 482 010c 00000000 		.word	gase_zero_pos
 483 0110 00000000 		.word	gase_max_pos
 484 0114 00000000 		.word	target_duty
 485 0118 00000000 		.word	duty_dt
 486 011c 00000000 		.word	duty
 487 0120 00002040 		.word	1075838976
 488 0124 00100140 		.word	1073811456
 489              		.cfi_endproc
 490              	.LFE76:
 492              		.section	.text.Error_Handler,"ax",%progbits
 493              		.align	1
 494              		.global	Error_Handler
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 499              	Error_Handler:
 500              	.LFB77:
 459:Core/Src/main.c **** /* USER CODE END 4 */
 460:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 18


 461:Core/Src/main.c **** /**
 462:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 463:Core/Src/main.c ****   * @retval None
 464:Core/Src/main.c ****   */
 465:Core/Src/main.c **** void Error_Handler(void)
 466:Core/Src/main.c **** {
 501              		.loc 1 466 1 view -0
 502              		.cfi_startproc
 503              		@ Volatile: function does not return.
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		@ link register save eliminated.
 467:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 468:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 469:Core/Src/main.c ****   __disable_irq();
 507              		.loc 1 469 3 view .LVU122
 508              	.LBB11:
 509              	.LBI11:
 510              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 19


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 20


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 511              		.loc 2 140 27 view .LVU123
 512              	.LBB12:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 513              		.loc 2 142 3 view .LVU124
 514              		.syntax unified
 515              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 516 0000 72B6     		cpsid i
 517              	@ 0 "" 2
 518              		.thumb
 519              		.syntax unified
 520              	.L27:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 21


 521              	.LBE12:
 522              	.LBE11:
 470:Core/Src/main.c ****   while (1)
 523              		.loc 1 470 3 view .LVU125
 471:Core/Src/main.c ****   {
 472:Core/Src/main.c ****   }
 524              		.loc 1 472 3 view .LVU126
 470:Core/Src/main.c ****   while (1)
 525              		.loc 1 470 9 view .LVU127
 526 0002 FEE7     		b	.L27
 527              		.cfi_endproc
 528              	.LFE77:
 530              		.section	.text.MX_ADC1_Init,"ax",%progbits
 531              		.align	1
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 536              	MX_ADC1_Init:
 537              	.LFB70:
 214:Core/Src/main.c **** 
 538              		.loc 1 214 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 16
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542 0000 00B5     		push	{lr}
 543              		.cfi_def_cfa_offset 4
 544              		.cfi_offset 14, -4
 545 0002 85B0     		sub	sp, sp, #20
 546              		.cfi_def_cfa_offset 24
 220:Core/Src/main.c **** 
 547              		.loc 1 220 3 view .LVU129
 220:Core/Src/main.c **** 
 548              		.loc 1 220 26 is_stmt 0 view .LVU130
 549 0004 0023     		movs	r3, #0
 550 0006 0193     		str	r3, [sp, #4]
 551 0008 0293     		str	r3, [sp, #8]
 552 000a 0393     		str	r3, [sp, #12]
 228:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 553              		.loc 1 228 3 is_stmt 1 view .LVU131
 228:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 554              		.loc 1 228 18 is_stmt 0 view .LVU132
 555 000c 0F48     		ldr	r0, .L34
 556 000e 104A     		ldr	r2, .L34+4
 557 0010 0260     		str	r2, [r0]
 229:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 558              		.loc 1 229 3 is_stmt 1 view .LVU133
 229:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 559              		.loc 1 229 27 is_stmt 0 view .LVU134
 560 0012 8360     		str	r3, [r0, #8]
 230:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 561              		.loc 1 230 3 is_stmt 1 view .LVU135
 230:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 562              		.loc 1 230 33 is_stmt 0 view .LVU136
 563 0014 0373     		strb	r3, [r0, #12]
 231:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 564              		.loc 1 231 3 is_stmt 1 view .LVU137
 231:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 22


 565              		.loc 1 231 36 is_stmt 0 view .LVU138
 566 0016 0375     		strb	r3, [r0, #20]
 232:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 567              		.loc 1 232 3 is_stmt 1 view .LVU139
 232:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 568              		.loc 1 232 31 is_stmt 0 view .LVU140
 569 0018 4FF46022 		mov	r2, #917504
 570 001c C261     		str	r2, [r0, #28]
 233:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 571              		.loc 1 233 3 is_stmt 1 view .LVU141
 233:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 572              		.loc 1 233 24 is_stmt 0 view .LVU142
 573 001e 4360     		str	r3, [r0, #4]
 234:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 574              		.loc 1 234 3 is_stmt 1 view .LVU143
 234:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 575              		.loc 1 234 30 is_stmt 0 view .LVU144
 576 0020 0123     		movs	r3, #1
 577 0022 0361     		str	r3, [r0, #16]
 235:Core/Src/main.c ****   {
 578              		.loc 1 235 3 is_stmt 1 view .LVU145
 235:Core/Src/main.c ****   {
 579              		.loc 1 235 7 is_stmt 0 view .LVU146
 580 0024 FFF7FEFF 		bl	HAL_ADC_Init
 581              	.LVL31:
 235:Core/Src/main.c ****   {
 582              		.loc 1 235 6 discriminator 1 view .LVU147
 583 0028 60B9     		cbnz	r0, .L32
 242:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 584              		.loc 1 242 3 is_stmt 1 view .LVU148
 242:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 585              		.loc 1 242 19 is_stmt 0 view .LVU149
 586 002a 0023     		movs	r3, #0
 587 002c 0193     		str	r3, [sp, #4]
 243:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 588              		.loc 1 243 3 is_stmt 1 view .LVU150
 243:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 589              		.loc 1 243 16 is_stmt 0 view .LVU151
 590 002e 0122     		movs	r2, #1
 591 0030 0292     		str	r2, [sp, #8]
 244:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 592              		.loc 1 244 3 is_stmt 1 view .LVU152
 244:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 593              		.loc 1 244 24 is_stmt 0 view .LVU153
 594 0032 0393     		str	r3, [sp, #12]
 245:Core/Src/main.c ****   {
 595              		.loc 1 245 3 is_stmt 1 view .LVU154
 245:Core/Src/main.c ****   {
 596              		.loc 1 245 7 is_stmt 0 view .LVU155
 597 0034 01A9     		add	r1, sp, #4
 598 0036 0548     		ldr	r0, .L34
 599 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 600              	.LVL32:
 245:Core/Src/main.c ****   {
 601              		.loc 1 245 6 discriminator 1 view .LVU156
 602 003c 20B9     		cbnz	r0, .L33
 253:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 23


 603              		.loc 1 253 1 view .LVU157
 604 003e 05B0     		add	sp, sp, #20
 605              		.cfi_remember_state
 606              		.cfi_def_cfa_offset 4
 607              		@ sp needed
 608 0040 5DF804FB 		ldr	pc, [sp], #4
 609              	.L32:
 610              		.cfi_restore_state
 237:Core/Src/main.c ****   }
 611              		.loc 1 237 5 is_stmt 1 view .LVU158
 612 0044 FFF7FEFF 		bl	Error_Handler
 613              	.LVL33:
 614              	.L33:
 247:Core/Src/main.c ****   }
 615              		.loc 1 247 5 view .LVU159
 616 0048 FFF7FEFF 		bl	Error_Handler
 617              	.LVL34:
 618              	.L35:
 619              		.align	2
 620              	.L34:
 621 004c 00000000 		.word	hadc1
 622 0050 00240140 		.word	1073816576
 623              		.cfi_endproc
 624              	.LFE70:
 626              		.section	.text.MX_TIM1_Init,"ax",%progbits
 627              		.align	1
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 632              	MX_TIM1_Init:
 633              	.LFB72:
 289:Core/Src/main.c **** 
 634              		.loc 1 289 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 88
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 10B5     		push	{r4, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 4, -8
 641              		.cfi_offset 14, -4
 642 0002 96B0     		sub	sp, sp, #88
 643              		.cfi_def_cfa_offset 96
 295:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 644              		.loc 1 295 3 view .LVU161
 295:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 645              		.loc 1 295 26 is_stmt 0 view .LVU162
 646 0004 0024     		movs	r4, #0
 647 0006 1294     		str	r4, [sp, #72]
 648 0008 1394     		str	r4, [sp, #76]
 649 000a 1494     		str	r4, [sp, #80]
 650 000c 1594     		str	r4, [sp, #84]
 296:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 651              		.loc 1 296 3 is_stmt 1 view .LVU163
 296:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 652              		.loc 1 296 27 is_stmt 0 view .LVU164
 653 000e 1094     		str	r4, [sp, #64]
 654 0010 1194     		str	r4, [sp, #68]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 24


 297:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 655              		.loc 1 297 3 is_stmt 1 view .LVU165
 297:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 656              		.loc 1 297 22 is_stmt 0 view .LVU166
 657 0012 0994     		str	r4, [sp, #36]
 658 0014 0A94     		str	r4, [sp, #40]
 659 0016 0B94     		str	r4, [sp, #44]
 660 0018 0C94     		str	r4, [sp, #48]
 661 001a 0D94     		str	r4, [sp, #52]
 662 001c 0E94     		str	r4, [sp, #56]
 663 001e 0F94     		str	r4, [sp, #60]
 298:Core/Src/main.c **** 
 664              		.loc 1 298 3 is_stmt 1 view .LVU167
 298:Core/Src/main.c **** 
 665              		.loc 1 298 34 is_stmt 0 view .LVU168
 666 0020 2022     		movs	r2, #32
 667 0022 2146     		mov	r1, r4
 668 0024 01A8     		add	r0, sp, #4
 669 0026 FFF7FEFF 		bl	memset
 670              	.LVL35:
 303:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 671              		.loc 1 303 3 is_stmt 1 view .LVU169
 303:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 672              		.loc 1 303 18 is_stmt 0 view .LVU170
 673 002a 3248     		ldr	r0, .L54
 674 002c 324B     		ldr	r3, .L54+4
 675 002e 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 676              		.loc 1 304 3 is_stmt 1 view .LVU171
 304:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 677              		.loc 1 304 24 is_stmt 0 view .LVU172
 678 0030 4460     		str	r4, [r0, #4]
 305:Core/Src/main.c ****   htim1.Init.Period = 2399;
 679              		.loc 1 305 3 is_stmt 1 view .LVU173
 305:Core/Src/main.c ****   htim1.Init.Period = 2399;
 680              		.loc 1 305 26 is_stmt 0 view .LVU174
 681 0032 8460     		str	r4, [r0, #8]
 306:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 682              		.loc 1 306 3 is_stmt 1 view .LVU175
 306:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 683              		.loc 1 306 21 is_stmt 0 view .LVU176
 684 0034 40F65F13 		movw	r3, #2399
 685 0038 C360     		str	r3, [r0, #12]
 307:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 686              		.loc 1 307 3 is_stmt 1 view .LVU177
 307:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 687              		.loc 1 307 28 is_stmt 0 view .LVU178
 688 003a 0461     		str	r4, [r0, #16]
 308:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 689              		.loc 1 308 3 is_stmt 1 view .LVU179
 308:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 690              		.loc 1 308 32 is_stmt 0 view .LVU180
 691 003c 4461     		str	r4, [r0, #20]
 309:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 692              		.loc 1 309 3 is_stmt 1 view .LVU181
 309:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 693              		.loc 1 309 32 is_stmt 0 view .LVU182
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 25


 694 003e 8461     		str	r4, [r0, #24]
 310:Core/Src/main.c ****   {
 695              		.loc 1 310 3 is_stmt 1 view .LVU183
 310:Core/Src/main.c ****   {
 696              		.loc 1 310 7 is_stmt 0 view .LVU184
 697 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 698              	.LVL36:
 310:Core/Src/main.c ****   {
 699              		.loc 1 310 6 discriminator 1 view .LVU185
 700 0044 0028     		cmp	r0, #0
 701 0046 44D1     		bne	.L46
 314:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 702              		.loc 1 314 3 is_stmt 1 view .LVU186
 314:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 703              		.loc 1 314 34 is_stmt 0 view .LVU187
 704 0048 4FF48053 		mov	r3, #4096
 705 004c 1293     		str	r3, [sp, #72]
 315:Core/Src/main.c ****   {
 706              		.loc 1 315 3 is_stmt 1 view .LVU188
 315:Core/Src/main.c ****   {
 707              		.loc 1 315 7 is_stmt 0 view .LVU189
 708 004e 12A9     		add	r1, sp, #72
 709 0050 2848     		ldr	r0, .L54
 710 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 711              	.LVL37:
 315:Core/Src/main.c ****   {
 712              		.loc 1 315 6 discriminator 1 view .LVU190
 713 0056 0028     		cmp	r0, #0
 714 0058 3DD1     		bne	.L47
 319:Core/Src/main.c ****   {
 715              		.loc 1 319 3 is_stmt 1 view .LVU191
 319:Core/Src/main.c ****   {
 716              		.loc 1 319 7 is_stmt 0 view .LVU192
 717 005a 2648     		ldr	r0, .L54
 718 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 719              	.LVL38:
 319:Core/Src/main.c ****   {
 720              		.loc 1 319 6 discriminator 1 view .LVU193
 721 0060 0028     		cmp	r0, #0
 722 0062 3AD1     		bne	.L48
 323:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 723              		.loc 1 323 3 is_stmt 1 view .LVU194
 323:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 724              		.loc 1 323 37 is_stmt 0 view .LVU195
 725 0064 0023     		movs	r3, #0
 726 0066 1093     		str	r3, [sp, #64]
 324:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 727              		.loc 1 324 3 is_stmt 1 view .LVU196
 324:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 728              		.loc 1 324 33 is_stmt 0 view .LVU197
 729 0068 1193     		str	r3, [sp, #68]
 325:Core/Src/main.c ****   {
 730              		.loc 1 325 3 is_stmt 1 view .LVU198
 325:Core/Src/main.c ****   {
 731              		.loc 1 325 7 is_stmt 0 view .LVU199
 732 006a 10A9     		add	r1, sp, #64
 733 006c 2148     		ldr	r0, .L54
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 26


 734 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 735              	.LVL39:
 325:Core/Src/main.c ****   {
 736              		.loc 1 325 6 discriminator 1 view .LVU200
 737 0072 0028     		cmp	r0, #0
 738 0074 33D1     		bne	.L49
 329:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 739              		.loc 1 329 3 is_stmt 1 view .LVU201
 329:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 740              		.loc 1 329 20 is_stmt 0 view .LVU202
 741 0076 6023     		movs	r3, #96
 742 0078 0993     		str	r3, [sp, #36]
 330:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 743              		.loc 1 330 3 is_stmt 1 view .LVU203
 330:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 744              		.loc 1 330 19 is_stmt 0 view .LVU204
 745 007a 0022     		movs	r2, #0
 746 007c 0A92     		str	r2, [sp, #40]
 331:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 747              		.loc 1 331 3 is_stmt 1 view .LVU205
 331:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 748              		.loc 1 331 24 is_stmt 0 view .LVU206
 749 007e 0B92     		str	r2, [sp, #44]
 332:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 750              		.loc 1 332 3 is_stmt 1 view .LVU207
 332:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 751              		.loc 1 332 25 is_stmt 0 view .LVU208
 752 0080 0C92     		str	r2, [sp, #48]
 333:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 753              		.loc 1 333 3 is_stmt 1 view .LVU209
 333:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 754              		.loc 1 333 24 is_stmt 0 view .LVU210
 755 0082 0D92     		str	r2, [sp, #52]
 334:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 756              		.loc 1 334 3 is_stmt 1 view .LVU211
 334:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 757              		.loc 1 334 25 is_stmt 0 view .LVU212
 758 0084 0E92     		str	r2, [sp, #56]
 335:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 759              		.loc 1 335 3 is_stmt 1 view .LVU213
 335:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 760              		.loc 1 335 26 is_stmt 0 view .LVU214
 761 0086 0F92     		str	r2, [sp, #60]
 336:Core/Src/main.c ****   {
 762              		.loc 1 336 3 is_stmt 1 view .LVU215
 336:Core/Src/main.c ****   {
 763              		.loc 1 336 7 is_stmt 0 view .LVU216
 764 0088 09A9     		add	r1, sp, #36
 765 008a 1A48     		ldr	r0, .L54
 766 008c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 767              	.LVL40:
 336:Core/Src/main.c ****   {
 768              		.loc 1 336 6 discriminator 1 view .LVU217
 769 0090 38BB     		cbnz	r0, .L50
 340:Core/Src/main.c ****   {
 770              		.loc 1 340 3 is_stmt 1 view .LVU218
 340:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 27


 771              		.loc 1 340 7 is_stmt 0 view .LVU219
 772 0092 0422     		movs	r2, #4
 773 0094 09A9     		add	r1, sp, #36
 774 0096 1748     		ldr	r0, .L54
 775 0098 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 776              	.LVL41:
 340:Core/Src/main.c ****   {
 777              		.loc 1 340 6 discriminator 1 view .LVU220
 778 009c 18BB     		cbnz	r0, .L51
 344:Core/Src/main.c ****   {
 779              		.loc 1 344 3 is_stmt 1 view .LVU221
 344:Core/Src/main.c ****   {
 780              		.loc 1 344 7 is_stmt 0 view .LVU222
 781 009e 0822     		movs	r2, #8
 782 00a0 09A9     		add	r1, sp, #36
 783 00a2 1448     		ldr	r0, .L54
 784 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 785              	.LVL42:
 344:Core/Src/main.c ****   {
 786              		.loc 1 344 6 discriminator 1 view .LVU223
 787 00a8 F8B9     		cbnz	r0, .L52
 348:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 788              		.loc 1 348 3 is_stmt 1 view .LVU224
 348:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 789              		.loc 1 348 40 is_stmt 0 view .LVU225
 790 00aa 0023     		movs	r3, #0
 791 00ac 0193     		str	r3, [sp, #4]
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 792              		.loc 1 349 3 is_stmt 1 view .LVU226
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 793              		.loc 1 349 41 is_stmt 0 view .LVU227
 794 00ae 0293     		str	r3, [sp, #8]
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 795              		.loc 1 350 3 is_stmt 1 view .LVU228
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 796              		.loc 1 350 34 is_stmt 0 view .LVU229
 797 00b0 0393     		str	r3, [sp, #12]
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 798              		.loc 1 351 3 is_stmt 1 view .LVU230
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 799              		.loc 1 351 33 is_stmt 0 view .LVU231
 800 00b2 0493     		str	r3, [sp, #16]
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 801              		.loc 1 352 3 is_stmt 1 view .LVU232
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 802              		.loc 1 352 35 is_stmt 0 view .LVU233
 803 00b4 0593     		str	r3, [sp, #20]
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 804              		.loc 1 353 3 is_stmt 1 view .LVU234
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 805              		.loc 1 353 38 is_stmt 0 view .LVU235
 806 00b6 4FF40052 		mov	r2, #8192
 807 00ba 0692     		str	r2, [sp, #24]
 354:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 808              		.loc 1 354 3 is_stmt 1 view .LVU236
 354:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 809              		.loc 1 354 40 is_stmt 0 view .LVU237
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 28


 810 00bc 0893     		str	r3, [sp, #32]
 355:Core/Src/main.c ****   {
 811              		.loc 1 355 3 is_stmt 1 view .LVU238
 355:Core/Src/main.c ****   {
 812              		.loc 1 355 7 is_stmt 0 view .LVU239
 813 00be 01A9     		add	r1, sp, #4
 814 00c0 0C48     		ldr	r0, .L54
 815 00c2 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 816              	.LVL43:
 355:Core/Src/main.c ****   {
 817              		.loc 1 355 6 discriminator 1 view .LVU240
 818 00c6 90B9     		cbnz	r0, .L53
 362:Core/Src/main.c **** 
 819              		.loc 1 362 3 is_stmt 1 view .LVU241
 820 00c8 0A48     		ldr	r0, .L54
 821 00ca FFF7FEFF 		bl	HAL_TIM_MspPostInit
 822              	.LVL44:
 364:Core/Src/main.c **** 
 823              		.loc 1 364 1 is_stmt 0 view .LVU242
 824 00ce 16B0     		add	sp, sp, #88
 825              		.cfi_remember_state
 826              		.cfi_def_cfa_offset 8
 827              		@ sp needed
 828 00d0 10BD     		pop	{r4, pc}
 829              	.L46:
 830              		.cfi_restore_state
 312:Core/Src/main.c ****   }
 831              		.loc 1 312 5 is_stmt 1 view .LVU243
 832 00d2 FFF7FEFF 		bl	Error_Handler
 833              	.LVL45:
 834              	.L47:
 317:Core/Src/main.c ****   }
 835              		.loc 1 317 5 view .LVU244
 836 00d6 FFF7FEFF 		bl	Error_Handler
 837              	.LVL46:
 838              	.L48:
 321:Core/Src/main.c ****   }
 839              		.loc 1 321 5 view .LVU245
 840 00da FFF7FEFF 		bl	Error_Handler
 841              	.LVL47:
 842              	.L49:
 327:Core/Src/main.c ****   }
 843              		.loc 1 327 5 view .LVU246
 844 00de FFF7FEFF 		bl	Error_Handler
 845              	.LVL48:
 846              	.L50:
 338:Core/Src/main.c ****   }
 847              		.loc 1 338 5 view .LVU247
 848 00e2 FFF7FEFF 		bl	Error_Handler
 849              	.LVL49:
 850              	.L51:
 342:Core/Src/main.c ****   }
 851              		.loc 1 342 5 view .LVU248
 852 00e6 FFF7FEFF 		bl	Error_Handler
 853              	.LVL50:
 854              	.L52:
 346:Core/Src/main.c ****   }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 29


 855              		.loc 1 346 5 view .LVU249
 856 00ea FFF7FEFF 		bl	Error_Handler
 857              	.LVL51:
 858              	.L53:
 357:Core/Src/main.c ****   }
 859              		.loc 1 357 5 view .LVU250
 860 00ee FFF7FEFF 		bl	Error_Handler
 861              	.LVL52:
 862              	.L55:
 863 00f2 00BF     		.align	2
 864              	.L54:
 865 00f4 00000000 		.word	htim1
 866 00f8 002C0140 		.word	1073818624
 867              		.cfi_endproc
 868              	.LFE72:
 870              		.section	.text.MX_IWDG_Init,"ax",%progbits
 871              		.align	1
 872              		.syntax unified
 873              		.thumb
 874              		.thumb_func
 876              	MX_IWDG_Init:
 877              	.LFB71:
 261:Core/Src/main.c **** 
 878              		.loc 1 261 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882 0000 08B5     		push	{r3, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 3, -8
 885              		.cfi_offset 14, -4
 270:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 886              		.loc 1 270 3 view .LVU252
 270:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 887              		.loc 1 270 18 is_stmt 0 view .LVU253
 888 0002 0648     		ldr	r0, .L60
 889 0004 064B     		ldr	r3, .L60+4
 890 0006 0360     		str	r3, [r0]
 271:Core/Src/main.c ****   hiwdg.Init.Reload = 80;
 891              		.loc 1 271 3 is_stmt 1 view .LVU254
 271:Core/Src/main.c ****   hiwdg.Init.Reload = 80;
 892              		.loc 1 271 24 is_stmt 0 view .LVU255
 893 0008 0023     		movs	r3, #0
 894 000a 4360     		str	r3, [r0, #4]
 272:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 895              		.loc 1 272 3 is_stmt 1 view .LVU256
 272:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 896              		.loc 1 272 21 is_stmt 0 view .LVU257
 897 000c 5023     		movs	r3, #80
 898 000e 8360     		str	r3, [r0, #8]
 273:Core/Src/main.c ****   {
 899              		.loc 1 273 3 is_stmt 1 view .LVU258
 273:Core/Src/main.c ****   {
 900              		.loc 1 273 7 is_stmt 0 view .LVU259
 901 0010 FFF7FEFF 		bl	HAL_IWDG_Init
 902              	.LVL53:
 273:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 30


 903              		.loc 1 273 6 discriminator 1 view .LVU260
 904 0014 00B9     		cbnz	r0, .L59
 281:Core/Src/main.c **** 
 905              		.loc 1 281 1 view .LVU261
 906 0016 08BD     		pop	{r3, pc}
 907              	.L59:
 275:Core/Src/main.c ****   }
 908              		.loc 1 275 5 is_stmt 1 view .LVU262
 909 0018 FFF7FEFF 		bl	Error_Handler
 910              	.LVL54:
 911              	.L61:
 912              		.align	2
 913              	.L60:
 914 001c 00000000 		.word	hiwdg
 915 0020 00300040 		.word	1073754112
 916              		.cfi_endproc
 917              	.LFE71:
 919              		.section	.text.SystemClock_Config,"ax",%progbits
 920              		.align	1
 921              		.global	SystemClock_Config
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 926              	SystemClock_Config:
 927              	.LFB69:
 166:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 928              		.loc 1 166 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 80
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932 0000 10B5     		push	{r4, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 4, -8
 935              		.cfi_offset 14, -4
 936 0002 94B0     		sub	sp, sp, #80
 937              		.cfi_def_cfa_offset 88
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 938              		.loc 1 167 3 view .LVU264
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 939              		.loc 1 167 22 is_stmt 0 view .LVU265
 940 0004 0AAC     		add	r4, sp, #40
 941 0006 2822     		movs	r2, #40
 942 0008 0021     		movs	r1, #0
 943 000a 2046     		mov	r0, r4
 944 000c FFF7FEFF 		bl	memset
 945              	.LVL55:
 168:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 946              		.loc 1 168 3 is_stmt 1 view .LVU266
 168:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 947              		.loc 1 168 22 is_stmt 0 view .LVU267
 948 0010 0023     		movs	r3, #0
 949 0012 0593     		str	r3, [sp, #20]
 950 0014 0693     		str	r3, [sp, #24]
 951 0016 0793     		str	r3, [sp, #28]
 952 0018 0893     		str	r3, [sp, #32]
 953 001a 0993     		str	r3, [sp, #36]
 169:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 31


 954              		.loc 1 169 3 is_stmt 1 view .LVU268
 169:Core/Src/main.c **** 
 955              		.loc 1 169 28 is_stmt 0 view .LVU269
 956 001c 0193     		str	r3, [sp, #4]
 957 001e 0293     		str	r3, [sp, #8]
 958 0020 0393     		str	r3, [sp, #12]
 959 0022 0493     		str	r3, [sp, #16]
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 960              		.loc 1 174 3 is_stmt 1 view .LVU270
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 961              		.loc 1 174 36 is_stmt 0 view .LVU271
 962 0024 0923     		movs	r3, #9
 963 0026 0A93     		str	r3, [sp, #40]
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 964              		.loc 1 175 3 is_stmt 1 view .LVU272
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 965              		.loc 1 175 30 is_stmt 0 view .LVU273
 966 0028 4FF48033 		mov	r3, #65536
 967 002c 0B93     		str	r3, [sp, #44]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 968              		.loc 1 176 3 is_stmt 1 view .LVU274
 177:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 969              		.loc 1 177 3 view .LVU275
 177:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 970              		.loc 1 177 30 is_stmt 0 view .LVU276
 971 002e 0122     		movs	r2, #1
 972 0030 0E92     		str	r2, [sp, #56]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 973              		.loc 1 178 3 is_stmt 1 view .LVU277
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 974              		.loc 1 178 30 is_stmt 0 view .LVU278
 975 0032 1092     		str	r2, [sp, #64]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 976              		.loc 1 179 3 is_stmt 1 view .LVU279
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 977              		.loc 1 179 34 is_stmt 0 view .LVU280
 978 0034 0222     		movs	r2, #2
 979 0036 1192     		str	r2, [sp, #68]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 980              		.loc 1 180 3 is_stmt 1 view .LVU281
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 981              		.loc 1 180 35 is_stmt 0 view .LVU282
 982 0038 1293     		str	r3, [sp, #72]
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 983              		.loc 1 181 3 is_stmt 1 view .LVU283
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 984              		.loc 1 181 32 is_stmt 0 view .LVU284
 985 003a 4FF4E013 		mov	r3, #1835008
 986 003e 1393     		str	r3, [sp, #76]
 182:Core/Src/main.c ****   {
 987              		.loc 1 182 3 is_stmt 1 view .LVU285
 182:Core/Src/main.c ****   {
 988              		.loc 1 182 7 is_stmt 0 view .LVU286
 989 0040 2046     		mov	r0, r4
 990 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 991              	.LVL56:
 182:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 32


 992              		.loc 1 182 6 discriminator 1 view .LVU287
 993 0046 C0B9     		cbnz	r0, .L67
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 994              		.loc 1 189 3 is_stmt 1 view .LVU288
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 995              		.loc 1 189 31 is_stmt 0 view .LVU289
 996 0048 0F23     		movs	r3, #15
 997 004a 0593     		str	r3, [sp, #20]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 998              		.loc 1 191 3 is_stmt 1 view .LVU290
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 999              		.loc 1 191 34 is_stmt 0 view .LVU291
 1000 004c 0221     		movs	r1, #2
 1001 004e 0691     		str	r1, [sp, #24]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1002              		.loc 1 192 3 is_stmt 1 view .LVU292
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1003              		.loc 1 192 35 is_stmt 0 view .LVU293
 1004 0050 0023     		movs	r3, #0
 1005 0052 0793     		str	r3, [sp, #28]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1006              		.loc 1 193 3 is_stmt 1 view .LVU294
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1007              		.loc 1 193 36 is_stmt 0 view .LVU295
 1008 0054 4FF48062 		mov	r2, #1024
 1009 0058 0892     		str	r2, [sp, #32]
 194:Core/Src/main.c **** 
 1010              		.loc 1 194 3 is_stmt 1 view .LVU296
 194:Core/Src/main.c **** 
 1011              		.loc 1 194 36 is_stmt 0 view .LVU297
 1012 005a 0993     		str	r3, [sp, #36]
 196:Core/Src/main.c ****   {
 1013              		.loc 1 196 3 is_stmt 1 view .LVU298
 196:Core/Src/main.c ****   {
 1014              		.loc 1 196 7 is_stmt 0 view .LVU299
 1015 005c 05A8     		add	r0, sp, #20
 1016 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1017              	.LVL57:
 196:Core/Src/main.c ****   {
 1018              		.loc 1 196 6 discriminator 1 view .LVU300
 1019 0062 60B9     		cbnz	r0, .L68
 200:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1020              		.loc 1 200 3 is_stmt 1 view .LVU301
 200:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1021              		.loc 1 200 38 is_stmt 0 view .LVU302
 1022 0064 0223     		movs	r3, #2
 1023 0066 0193     		str	r3, [sp, #4]
 201:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1024              		.loc 1 201 3 is_stmt 1 view .LVU303
 201:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1025              		.loc 1 201 35 is_stmt 0 view .LVU304
 1026 0068 4FF40043 		mov	r3, #32768
 1027 006c 0393     		str	r3, [sp, #12]
 202:Core/Src/main.c ****   {
 1028              		.loc 1 202 3 is_stmt 1 view .LVU305
 202:Core/Src/main.c ****   {
 1029              		.loc 1 202 7 is_stmt 0 view .LVU306
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 33


 1030 006e 01A8     		add	r0, sp, #4
 1031 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1032              	.LVL58:
 202:Core/Src/main.c ****   {
 1033              		.loc 1 202 6 discriminator 1 view .LVU307
 1034 0074 28B9     		cbnz	r0, .L69
 206:Core/Src/main.c **** 
 1035              		.loc 1 206 1 view .LVU308
 1036 0076 14B0     		add	sp, sp, #80
 1037              		.cfi_remember_state
 1038              		.cfi_def_cfa_offset 8
 1039              		@ sp needed
 1040 0078 10BD     		pop	{r4, pc}
 1041              	.L67:
 1042              		.cfi_restore_state
 184:Core/Src/main.c ****   }
 1043              		.loc 1 184 5 is_stmt 1 view .LVU309
 1044 007a FFF7FEFF 		bl	Error_Handler
 1045              	.LVL59:
 1046              	.L68:
 198:Core/Src/main.c ****   }
 1047              		.loc 1 198 5 view .LVU310
 1048 007e FFF7FEFF 		bl	Error_Handler
 1049              	.LVL60:
 1050              	.L69:
 204:Core/Src/main.c ****   }
 1051              		.loc 1 204 5 view .LVU311
 1052 0082 FFF7FEFF 		bl	Error_Handler
 1053              	.LVL61:
 1054              		.cfi_endproc
 1055              	.LFE69:
 1057              		.section	.text.main,"ax",%progbits
 1058              		.align	1
 1059              		.global	main
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1064              	main:
 1065              	.LFB68:
 104:Core/Src/main.c **** 
 1066              		.loc 1 104 1 view -0
 1067              		.cfi_startproc
 1068              		@ Volatile: function does not return.
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071 0000 08B5     		push	{r3, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 3, -8
 1074              		.cfi_offset 14, -4
 113:Core/Src/main.c **** 
 1075              		.loc 1 113 3 view .LVU313
 1076 0002 FFF7FEFF 		bl	HAL_Init
 1077              	.LVL62:
 120:Core/Src/main.c **** 
 1078              		.loc 1 120 3 view .LVU314
 1079 0006 FFF7FEFF 		bl	SystemClock_Config
 1080              	.LVL63:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 34


 127:Core/Src/main.c ****   MX_DMA_Init();
 1081              		.loc 1 127 3 view .LVU315
 1082 000a FFF7FEFF 		bl	MX_GPIO_Init
 1083              	.LVL64:
 128:Core/Src/main.c ****   MX_ADC1_Init();
 1084              		.loc 1 128 3 view .LVU316
 1085 000e FFF7FEFF 		bl	MX_DMA_Init
 1086              	.LVL65:
 129:Core/Src/main.c ****   MX_TIM1_Init();
 1087              		.loc 1 129 3 view .LVU317
 1088 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1089              	.LVL66:
 130:Core/Src/main.c ****   MX_IWDG_Init();
 1090              		.loc 1 130 3 view .LVU318
 1091 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1092              	.LVL67:
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1093              		.loc 1 131 3 view .LVU319
 1094 001a FFF7FEFF 		bl	MX_IWDG_Init
 1095              	.LVL68:
 133:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 1096              		.loc 1 133 3 view .LVU320
 1097 001e 104C     		ldr	r4, .L73
 1098 0020 2046     		mov	r0, r4
 1099 0022 FFF7FEFF 		bl	HAL_ADC_Stop
 1100              	.LVL69:
 134:Core/Src/main.c **** 
 1101              		.loc 1 134 3 view .LVU321
 1102 0026 2046     		mov	r0, r4
 1103 0028 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1104              	.LVL70:
 136:Core/Src/main.c **** 
 1105              		.loc 1 136 3 view .LVU322
 1106 002c 0122     		movs	r2, #1
 1107 002e 0D49     		ldr	r1, .L73+4
 1108 0030 2046     		mov	r0, r4
 1109 0032 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1110              	.LVL71:
 138:Core/Src/main.c ****   MC_InitPWM();
 1111              		.loc 1 138 3 view .LVU323
 1112 0036 FFF7FEFF 		bl	MC_DisablePWM
 1113              	.LVL72:
 139:Core/Src/main.c ****   MC_SetDuty(0);
 1114              		.loc 1 139 3 view .LVU324
 1115 003a FFF7FEFF 		bl	MC_InitPWM
 1116              	.LVL73:
 140:Core/Src/main.c ****   MC_LoadStep(1);
 1117              		.loc 1 140 3 view .LVU325
 1118 003e 0020     		movs	r0, #0
 1119 0040 FFF7FEFF 		bl	MC_SetDuty
 1120              	.LVL74:
 141:Core/Src/main.c ****   MC_EnablePWM();
 1121              		.loc 1 141 3 view .LVU326
 1122 0044 0120     		movs	r0, #1
 1123 0046 FFF7FEFF 		bl	MC_LoadStep
 1124              	.LVL75:
 142:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 35


 1125              		.loc 1 142 3 view .LVU327
 1126 004a FFF7FEFF 		bl	MC_EnablePWM
 1127              	.LVL76:
 144:Core/Src/main.c ****   /* USER CODE END 2 */
 1128              		.loc 1 144 3 view .LVU328
 1129 004e FFF7FEFF 		bl	MX_IWDG_Init
 1130              	.LVL77:
 1131              	.L71:
 149:Core/Src/main.c ****   {
 1132              		.loc 1 149 3 view .LVU329
 151:Core/Src/main.c **** 		  Error_Handler();
 1133              		.loc 1 151 5 view .LVU330
 151:Core/Src/main.c **** 		  Error_Handler();
 1134              		.loc 1 151 9 is_stmt 0 view .LVU331
 1135 0052 0548     		ldr	r0, .L73+8
 1136 0054 FFF7FEFF 		bl	HAL_IWDG_Refresh
 1137              	.LVL78:
 151:Core/Src/main.c **** 		  Error_Handler();
 1138              		.loc 1 151 8 discriminator 1 view .LVU332
 1139 0058 0028     		cmp	r0, #0
 1140 005a FAD0     		beq	.L71
 152:Core/Src/main.c **** 	  }
 1141              		.loc 1 152 5 is_stmt 1 view .LVU333
 1142 005c FFF7FEFF 		bl	Error_Handler
 1143              	.LVL79:
 1144              	.L74:
 1145              		.align	2
 1146              	.L73:
 1147 0060 00000000 		.word	hadc1
 1148 0064 00000000 		.word	adc_value
 1149 0068 00000000 		.word	hiwdg
 1150              		.cfi_endproc
 1151              	.LFE68:
 1153              		.global	isScreenConnected
 1154              		.section	.bss.isScreenConnected,"aw",%nobits
 1157              	isScreenConnected:
 1158 0000 00       		.space	1
 1159              		.global	current
 1160              		.section	.bss.current,"aw",%nobits
 1161              		.align	2
 1164              	current:
 1165 0000 00000000 		.space	4
 1166              		.global	target_duty
 1167              		.section	.bss.target_duty,"aw",%nobits
 1168              		.align	1
 1171              	target_duty:
 1172 0000 0000     		.space	2
 1173              		.global	adc_value
 1174              		.section	.bss.adc_value,"aw",%nobits
 1175              		.align	1
 1178              	adc_value:
 1179 0000 0000     		.space	2
 1180              		.global	stop_sequence_ctrl
 1181              		.section	.bss.stop_sequence_ctrl,"aw",%nobits
 1184              	stop_sequence_ctrl:
 1185 0000 00       		.space	1
 1186              		.global	stop_sequence
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 36


 1187              		.section	.bss.stop_sequence,"aw",%nobits
 1190              	stop_sequence:
 1191 0000 00       		.space	1
 1192              		.global	startup_sequence
 1193              		.section	.data.startup_sequence,"aw"
 1196              	startup_sequence:
 1197 0000 01       		.byte	1
 1198              		.global	gase_max_pos
 1199              		.section	.data.gase_max_pos,"aw"
 1200              		.align	2
 1203              	gase_max_pos:
 1204 0000 EA0B0000 		.word	3050
 1205              		.global	gase_zero_pos
 1206              		.section	.data.gase_zero_pos,"aw"
 1207              		.align	2
 1210              	gase_zero_pos:
 1211 0000 B0040000 		.word	1200
 1212              		.global	pulse_interval_data
 1213              		.section	.bss.pulse_interval_data,"aw",%nobits
 1214              		.align	2
 1217              	pulse_interval_data:
 1218 0000 00000000 		.space	4
 1219              		.global	pulse_interval_us
 1220              		.section	.data.pulse_interval_us,"aw"
 1221              		.align	2
 1224              	pulse_interval_us:
 1225 0000 FFFFFFFF 		.word	-1
 1226              		.global	hall_value
 1227              		.section	.bss.hall_value,"aw",%nobits
 1230              	hall_value:
 1231 0000 00       		.space	1
 1232              		.global	duty_dt
 1233              		.section	.bss.duty_dt,"aw",%nobits
 1234              		.align	1
 1237              	duty_dt:
 1238 0000 0000     		.space	2
 1239              		.global	duty
 1240              		.section	.bss.duty,"aw",%nobits
 1241              		.align	1
 1244              	duty:
 1245 0000 0000     		.space	2
 1246              		.global	htim1
 1247              		.section	.bss.htim1,"aw",%nobits
 1248              		.align	2
 1251              	htim1:
 1252 0000 00000000 		.space	72
 1252      00000000 
 1252      00000000 
 1252      00000000 
 1252      00000000 
 1253              		.global	hiwdg
 1254              		.section	.bss.hiwdg,"aw",%nobits
 1255              		.align	2
 1258              	hiwdg:
 1259 0000 00000000 		.space	12
 1259      00000000 
 1259      00000000 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 37


 1260              		.global	hdma_adc1
 1261              		.section	.bss.hdma_adc1,"aw",%nobits
 1262              		.align	2
 1265              	hdma_adc1:
 1266 0000 00000000 		.space	68
 1266      00000000 
 1266      00000000 
 1266      00000000 
 1266      00000000 
 1267              		.global	hadc1
 1268              		.section	.bss.hadc1,"aw",%nobits
 1269              		.align	2
 1272              	hadc1:
 1273 0000 00000000 		.space	48
 1273      00000000 
 1273      00000000 
 1273      00000000 
 1273      00000000 
 1274              		.text
 1275              	.Letext0:
 1276              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1277              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 1278              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
 1279              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1280              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1281              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1282              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1283              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1284              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1285              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1286              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 1287              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1288              		.file 15 "Core/Inc/main.h"
 1289              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1290              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1291              		.file 18 "Core/Inc/six_step.h"
 1292              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 1293              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1294              		.file 21 "<built-in>"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:158    .text.MX_GPIO_Init:00000098 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:165    .text.MX_DMA_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:170    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:215    .text.MX_DMA_Init:00000030 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:220    .text.map:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:226    .text.map:00000000 map
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:256    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:262    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:478    .text.HAL_TIM_PeriodElapsedCallback:000000fc $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1230   .bss.hall_value:00000000 hall_value
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1178   .bss.adc_value:00000000 adc_value
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1272   .bss.hadc1:00000000 hadc1
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1210   .data.gase_zero_pos:00000000 gase_zero_pos
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1203   .data.gase_max_pos:00000000 gase_max_pos
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1171   .bss.target_duty:00000000 target_duty
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1237   .bss.duty_dt:00000000 duty_dt
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1244   .bss.duty:00000000 duty
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:493    .text.Error_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:499    .text.Error_Handler:00000000 Error_Handler
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:531    .text.MX_ADC1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:536    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:621    .text.MX_ADC1_Init:0000004c $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:627    .text.MX_TIM1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:632    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:865    .text.MX_TIM1_Init:000000f4 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1251   .bss.htim1:00000000 htim1
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:871    .text.MX_IWDG_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:876    .text.MX_IWDG_Init:00000000 MX_IWDG_Init
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:914    .text.MX_IWDG_Init:0000001c $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1258   .bss.hiwdg:00000000 hiwdg
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:920    .text.SystemClock_Config:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:926    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1058   .text.main:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1064   .text.main:00000000 main
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1147   .text.main:00000060 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1157   .bss.isScreenConnected:00000000 isScreenConnected
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1158   .bss.isScreenConnected:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1164   .bss.current:00000000 current
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1161   .bss.current:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1168   .bss.target_duty:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1175   .bss.adc_value:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1184   .bss.stop_sequence_ctrl:00000000 stop_sequence_ctrl
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1185   .bss.stop_sequence_ctrl:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1190   .bss.stop_sequence:00000000 stop_sequence
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1191   .bss.stop_sequence:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1196   .data.startup_sequence:00000000 startup_sequence
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1200   .data.gase_max_pos:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1207   .data.gase_zero_pos:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1217   .bss.pulse_interval_data:00000000 pulse_interval_data
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1214   .bss.pulse_interval_data:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1224   .data.pulse_interval_us:00000000 pulse_interval_us
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1221   .data.pulse_interval_us:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1231   .bss.hall_value:00000000 $d
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s 			page 39


C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1234   .bss.duty_dt:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1241   .bss.duty:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1248   .bss.htim1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1255   .bss.hiwdg:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1265   .bss.hdma_adc1:00000000 hdma_adc1
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1262   .bss.hdma_adc1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccxUqevE.s:1269   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_ReadPin
HAL_ADC_Start_DMA
__aeabi_i2d
__aeabi_dcmple
MC_SetDuty
HAL_GPIO_TogglePin
MC_LoadStep
HAL_ADC_Init
HAL_ADC_ConfigChannel
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_IWDG_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_ADC_Stop
HAL_ADCEx_Calibration_Start
MC_DisablePWM
MC_InitPWM
MC_EnablePWM
HAL_IWDG_Refresh
